"use strict";

module.exports = {
  gerarEmpresa,
  gerarData,
  gerarPessoa,
  gerarEndereco,
  gerarCnpj,
  gerarCpf,
  gerarCelular,
  gerarTelefone,
};

var createNumberMask_1 = require("./createNumberMask.js");

const EMPRESAS_TIPOS = [
  "Academia",
  "Acervo",
  "Administradora",
  "Agencia",
  "Agenciamento",
  "Agricola",
  "Agronegocios",
  "Agropecuaria",
  "Anamaria",
  "Automoveis",
  "Autoservico",
  "Banco",
  "Barbearia",
  "Bbe-Engenharia",
  "Borracharia",
  "Boteco",
  "Boutique",
  "Brinquedos",
  "Britagem",
  "Caixotaria",
  "Caldeiraria",
  "Candelaria",
  "Capotaria",
  "Centenaria",
  "Cervejaria",
  "Churrascaria",
  "Clinica",
  "Colchoaria",
  "Colegio",
  "Comercial",
  "Comidaria",
  "Concessionaria",
  "Condominio",
  "Confeccao",
  "Confeitaria",
  "Confraria",
  "Conservadora",
  "Construtora",
  "Consultoria",
  "Consultorio",
  "Contabilidade",
  "Contadores",
  "Cooperativa",
  "Corretora",
  "Cosmeticos",
  "Coworking",
  "Criacoes",
  "Culinaria",
  "Curso",
  "D'maria",
  "Depatarmento",
  "Deposito",
  "Desterro",
  "Destilaria",
  "Diagnosticos",
  "Diaria",
  "Distribuidor",
  "Distribuidora",
  "Dragagem",
  "Drogaria",
  "Edificio",
  "Educacao",
  "Educacional",
  "Eletro",
  "Empacotadora",
  "Empadaria",
  "Empreendimento",
  "Empreendimentos",
  "Engenharia",
  "Escola",
  "Escritorio",
  "Esmalteria",
  "Espetaria",
  "Estacionamento",
  "Estamparia",
  "Estetica",
  "Faria",
  "Farmacia",
  "Fazenda",
  "Feirao",
  "Filmes",
  "Funeraria",
  "Galeria",
  "Garagem",
  "Gastronomia",
  "Gelateria",
  "Graduacao",
  "Hamburgueria",
  "Hidraulica",
  "Higienizadora",
  "Hospedagens",
  "Hospedaria",
  "Hospitalistas",
  "Hotel",
  "Hotelzinho",
  "Imobiliaria",
  "Implementos",
  "Importados",
  "Incorporacao",
  "Incorporadora",
  "Industria",
  "Informatica",
  "Instituto",
  "Laboratorio",
  "Lajes",
  "Lanches",
  "Lanchonete",
  "Laticinios",
  "Lavanderia",
  "Likeengenharia",
  "Livraria",
  "Locacao",
  "Locadora",
  "Lojas",
  "Loteamento",
  "Madeireira",
  "Malharia",
  "Manutencao",
  "Marcenaria",
  "Maria",
  "Marmitaria",
  "Marmoraria",
  "Matadouro",
  "Mercadinho",
  "Mercadorias",
  "Mercearia",
  "Mercearias",
  "Metalurgica",
  "Microcervejaria",
  "Mineracao",
  "Mineracoes",
  "Mobiliadora",
  "Motopecas",
  "Moveis",
  "Movelaria",
  "Mudancas",
  "Neurologia",
  "Oficina",
  "Olaria",
  "Oncologia",
  "Organizacao",
  "Organizacoes",
  "Outlet",
  "Padaria",
  "Pamonharia",
  "Papelaria",
  "Pastelaria",
  "Peixaria",
  "Perfumaria",
  "Pizzaria",
  "Pneus",
  "Podologa",
  "Pomar",
  "Portal",
  "Postos",
  "Pousada",
  "Prestadora",
  "Primaria",
  "Queijaria",
  "Racoes",
  "Reboque",
  "Recuperacao",
  "Recuperadora",
  "Refrigeracao",
  "Relojoaria",
  "Representacao",
  "Representacoes",
  "Residencial",
  "Restaurante",
  "Revista",
  "Sacaria",
  "Sacolao",
  "Salao",
  "Sapataria",
  "Selaria",
  "Seminovos",
  "Serraria",
  "Tabacaria",
  "Tapecaria",
  "Taverna",
  "Tecidos",
  "Tecnologia",
  "Veterinaria",
  "Vidracaria",
];
const EMPRESAS_NOMES = [
  "Abaco",
  "Abcly",
  "Abdala",
  "Abducao",
  "Abelexiano",
  "Abner",
  "Abrahao",
  "Abrange",
  "Abrantes",
  "Abreu",
  "Academic",
  "Accimix",
  "Accioly",
  "Accon",
  "Acert",
  "Acerte",
  "Achevoce",
  "Acoforte",
  "Acompany",
  "Aconchego",
  "Actos",
  "Actum",
  "Adair",
  "Adao&Nisa",
  "Adaptee",
  "Ademilson",
  "Adicao",
  "Adisseo",
  "Adler",
  "Adriana",
  "Adriano",
  "Adservi",
  "Aduanacargo",
  "Advngo",
  "Aegis",
  "Aender",
  "Afeto",
  "Affitto",
  "Afrika",
  "Agaesse",
  "Agape",
  "Agapel",
  "Agartha",
  "Agcom",
  "Ageis",
  "Agger",
  "Agilgas",
  "Agiltech",
  "Agristar",
  "Agroceres",
  "Agrofutura",
  "Agrolimp",
  "Agronor",
  "Aguas",
  "Aguerra",
  "Aguia",
  "Aiala",
  "Airport",
  "Ajusta",
  "Akiva",
  "Akkala",
  "Albanaz",
  "Albuquerque",
  "Alcancar",
  "Alcance",
  "Aldrigues",
  "Aleco",
  "Alegria",
  "Aleluia",
  "Alessandra",
  "Alessandro",
  "Alevinos",
  "Alexandre",
  "Alfabeto",
  "Alfaconsult",
  "Algarve",
  "Algoritmo",
  "Alianca",
  "Alianza",
  "Alice",
  "Alignerplay",
  "Aline",
  "Alisso",
  "Alleato",
  "Allegro",
  "Alliance",
  "Alliment",
  "Allmv",
  "Allure",
  "Almawave",
  "Almeida",
  "Almirante",
  "Aloha",
  "Aloisio",
  "Alpar",
  "Alpha",
  "Alphaville",
  "Altavila",
  "Altbh",
  "Alternativa",
  "Alves",
  "Alysson",
  "Am/Pm",
  "Amadeus",
  "Amamscap",
  "Amans",
  "Amantini",
  "Amaral",
  "Amarelo",
  "Ambiente",
  "America",
  "American",
  "Americana",
  "Ammis",
  "Amora",
  "Amorim",
  "Amorzin",
  "Amparo",
  "Ampla",
  "Amplo",
  "Ampog",
  "Anafer",
  "Analu",
  "Anamnesis",
  "Anderson",
  "Andrade",
  "Andralog",
  "Andre",
  "Andreisa",
  "Andreza",
  "Aneliza",
  "Anella",
  "Aneth",
  "Angelo",
  "Angeltour",
  "Anglo",
  "Anima",
  "Aninger",
  "Anisio",
  "Annalu",
  "Anserve",
  "Antares",
  "Antonio",
  "Antunes",
  "Anunciacao",
  "Anuncie",
  "Aorta",
  "Apaga",
  "Aperte",
  "Apice",
  "Apoema",
  "Apoia",
  "Apolo",
  "Appia",
  "Applauso",
  "Apps4u",
  "Aprimorar",
  "Aprova",
  "Apsel-Analise,",
  "Aqualimp",
  "Aquamendes",
  "Aquele",
  "Aradissimo",
  "Arantes",
  "Arapar",
  "Araujo",
  "Araxa",
  "Arcabyte",
  "Arcom",
  "Arcos",
  "Areatec",
  "Arena",
  "Aretuza",
  "Ariana",
  "Ariele",
  "Armando",
  "Armani",
  "Armarinho",
  "Armazem",
  "Armazem128",
  "Arndt",
  "Arnia",
  "Aroeira",
  "Arquitetura",
  "Arquivo",
  "Arsil",
  "Artefatos",
  "Artefaz",
  "Artemis",
  "Artes",
  "Artevox",
  "Artex",
  "Artflexiveis",
  "Arthur",
  "Artpoke",
  "Arujacar",
  "Assado",
  "Assados",
  "Assaf",
  "Assis",
  "Associpax",
  "Astroh",
  "Atacadao",
  "Atacadista",
  "Atacarejo",
  "Atairu",
  "Atelier",
  "Atena",
  "Atenas",
  "Atende",
  "Athena",
  "Ativa",
  "Atlantico",
  "Atmosfera",
  "Atrium",
  "Attender",
  "Attilahuno",
  "Atual",
  "Atuante",
  "Auchma",
  "Augusto",
  "Aurora",
  "Austin",
  "Autoport",
  "Autoria",
  "Autotrans",
  "Avalanche",
  "Avance",
  "Avanco",
  "Avante",
  "Avibrac",
  "Avila",
  "Avodah",
  "Ayres",
  "Azevedo",
  "B.Gomes",
  "Backend",
  "Backoffice",
  "Baeta",
  "Bahia",
  "Bahiasul",
  "Baiana",
  "Balance",
  "Balanco",
  "Baldissera",
  "Ballesteros",
  "Bamauto",
  "Bamboleio",
  "Bandari",
  "Bandeira",
  "Bandeirantes",
  "Bandistar",
  "Bankar",
  "Banklab",
  "Bankone",
  "Bantu",
  "Bantur",
  "Baragli",
  "Barao",
  "Barbara",
  "Barbosa",
  "Barchen",
  "Barra",
  "Barros",
  "Bastos",
  "Batista",
  "Batitucci",
  "Bauer",
  "Baumac",
  "Bbe",
  "Bcmendes",
  "Bconn",
  "Beach",
  "Beaga",
  "Beatriz",
  "Beauty",
  "Beira",
  "Belas",
  "Beleza",
  "Believe",
  "Bella",
  "Bellatores",
  "Belly",
  "Beloff",
  "Belterra",
  "Bemon",
  "Benil",
  "Benza",
  "Bernadete",
  "Bernardo",
  "Bernardoni",
  "Berthelove",
  "Bertolin",
  "Bertonili",
  "Bertrand",
  "Besaude",
  "Besouro",
  "Betel",
  "Betim",
  "Bezerra",
  "Bhdigital",
  "Bhering",
  "Bhturismo",
  "Bicalho",
  "Bicicletas",
  "Bigcell",
  "Bikke",
  "Bimlab",
  "Biocrear",
  "Biogerais",
  "Biologistica",
  "Biomelting",
  "Birchal",
  "Biscoiteria",
  "Bistrogonoff",
  "Bitix",
  "Bittar",
  "Bl&Hd",
  "Black",
  "Bless",
  "Bleuet",
  "Blitz",
  "Blossom",
  "Bluemetrix",
  "Bluequest",
  "Bmagalhaes",
  "Boechat",
  "Bolota",
  "Bolsa",
  "Bolzante",
  "Bondosa",
  "Borbac",
  "Borbatech",
  "Borelli",
  "Borgato",
  "Borges",
  "Borth",
  "Bosco",
  "Bossa",
  "Botelho",
  "Brabus",
  "Bracco",
  "Bracim",
  "Braga",
  "Brandao",
  "Branding",
  "Brant",
  "Brantech",
  "Brasfrotas",
  "Brasil",
  "Brasilina",
  "Brasmien",
  "Brasmiv",
  "Brasquimica",
  "Brava",
  "Brave",
  "Bravery",
  "Bravo",
  "Brazilian",
  "Breitkopf",
  "Breja",
  "Brejeiro",
  "Bremar",
  "Brener",
  "Brenno",
  "Brito",
  "Britto",
  "Britto,",
  "Brother",
  "Brouss",
  "Brozinga",
  "Brugger",
  "Bruna",
  "Bruno",
  "Bryma",
  "Budai",
  "Bueno",
  "Build",
  "Bulbo's",
  "Buratto",
  "Burgos",
  "Burguer",
  "Buriti",
  "Business",
  "Businnes",
  "Bustamante",
  "Bvidigal",
  "Byters",
  "C.L.A.R.A",
  "C.L.E",
  "C.M.A",
  "Cabaninha",
  "Cabos",
  "Cabral",
  "Cachaca",
  "Caetano",
  "Cagec",
  "Cager",
  "Caixa",
  "Calcados",
  "Caldas",
  "Caldersete",
  "Calff",
  "Camargo",
  "Camargos",
  "Cametobh",
  "Camilla",
  "Campeao",
  "Campo",
  "Campolina",
  "Campomizzi",
  "Campomori",
  "Campos",
  "Canaan",
  "Canabrava",
  "Canada",
  "Canal",
  "Candeeiro",
  "Candelaria",
  "Canex",
  "Canis",
  "Canoa",
  "Cantina",
  "Cantinho",
  "Canton",
  "Capacitar",
  "Capanema",
  "Capila",
  "Capistrana",
  "Capital",
  "Carapina",
  "Carbonaro",
  "Cardcon",
  "Cardeal",
  "Cardinali",
  "Cardoso",
  "Careli",
  "Cariacica",
  "Carlos",
  "Carmax",
  "Carmo",
  "Carneiro",
  "Carolina",
  "Carpe",
  "Carreira",
  "Carupi",
  "Carvalhaes",
  "Carvalho's",
  "Carvalho",
  "Casagrande",
  "Casapelli",
  "Casca",
  "Casdep",
  "Casede",
  "Casemiro",
  "Casinha",
  "Cassa",
  "Cassiflex",
  "Castelo",
  "Castelpan",
  "Castorino",
  "Castro",
  "Catalao",
  "Cateia",
  "Cateto",
  "Catharina",
  "Catiras",
  "Cavalcante",
  "Cazorla",
  "Cbead-Centro",
  "Cbmed",
  "Ce1ma",
  "Cead-Centro",
  "Ceccatto",
  "Cecilio",
  "Cecol",
  "Cedepp",
  "Cedin",
  "Cedric",
  "Cedro",
  "Cehhos",
  "Cehjur",
  "Celebridog",
  "Celso",
  "Cenge",
  "Centauro",
  "Centenaria",
  "Central",
  "Centro",
  "Ceramica",
  "Cereais",
  "Certare",
  "Certsym",
  "Cesar",
  "Ceteb",
  "Cgcampos",
  "Chagas",
  "Chamma",
  "Chamois",
  "Change",
  "Chapa",
  "Charlotte",
  "Charmes",
  "Chaves",
  "Check",
  "Chefpro",
  "Cherem",
  "Chiaro",
  "Chica",
  "Chico",
  "Chocobigfestas",
  "Chocolateria",
  "Choice",
  "Christian",
  "Christine",
  "Chronos",
  "Ciareis",
  "Ciaza",
  "Cicero",
  "Cicle",
  "Cidol",
  "Cillo",
  "Cimbre",
  "Cimipar",
  "Cinthia",
  "Cipra",
  "Circular",
  "Cirius",
  "Civcon",
  "Civilpav",
  "Ckad2",
  "Clara",
  "Clarisse",
  "Clark",
  "Claro",
  "Classic",
  "Claudio",
  "Clean",
  "Cleber",
  "Clement",
  "Clementine",
  "Cleusa",
  "Click",
  "Clinesp",
  "Clinical",
  "Clipcode",
  "Closer",
  "Clube",
  "Codema",
  "Codilo",
  "Coelho",
  "Coffeetrans",
  "Coimbra",
  "Colab",
  "Colchoes",
  "Collares",
  "Colostro",
  "Com.E",
  "Comader",
  "Comalq",
  "Comando",
  "Comdeq",
  "Comel",
  "Comercio",
  "Comex",
  "Companhia",
  "Compliance",
  "Comply",
  "Compra",
  "Compwire",
  "Conall",
  "Conattus",
  "Concasa",
  "Conchas",
  "Concordia",
  "Concordis",
  "Concre7",
  "Concreaco",
  "Concrelagos",
  "Concretizar",
  "Conecta",
  "Conectar",
  "Conex",
  "Conexao",
  "Conexoes",
  "Confia",
  "Confianca",
  "Conforti",
  "Conforto",
  "Conhecer",
  "Connect",
  "Conpet",
  "Constata",
  "Constru",
  "Construbase",
  "Construdvi",
  "Construmatel",
  "Consult",
  "Consumo",
  "Conta",
  "Contactus",
  "Contagem",
  "Contemporanea",
  "Contra",
  "Control",
  "Controle",
  "Controlmig",
  "Control_I",
  "Coopax",
  "Coopetech",
  "Copagaz",
  "Copam",
  "Coqueiros",
  "Corelli",
  "Corporeo",
  "Correa",
  "Correia",
  "Corrieri",
  "Corsica",
  "Cosso",
  "Costa",
  "Coutinho",
  "Crate",
  "Creation",
  "Creative",
  "Credifaz",
  "Crianca",
  "Criartgold",
  "Criativa",
  "Crisley",
  "Cristi",
  "Cristiana",
  "Crmarques",
  "Crossing",
  "Cruizer",
  "Crush",
  "Cruvi",
  "Cs2pb",
  "Cunha",
  "Curitiba",
  "Curvelo",
  "Customize",
  "Cyklope",
  "Cymile",
  "D&Apos;Avista",
  "D'paiol",
  "Dacasa",
  "Dafel",
  "Dafix",
  "Danata",
  "Danie",
  "Daniel",
  "Daniellee",
  "Daqui",
  "Darklight",
  "David",
  "Daviola",
  "Dayane",
  "Dayanne",
  "Dayrell",
  "Dcifre",
  "Dealer",
  "Deborah",
  "Decals",
  "Decio",
  "Decisao",
  "Decolar",
  "Decora",
  "Decoraoutlet",
  "Dedetizadora",
  "Degustar",
  "Deguste",
  "Delicatto",
  "Delicias",
  "Delivery",
  "Dellmar",
  "Dellt",
  "Delta",
  "Demito",
  "Denadai",
  "Denso",
  "Dental",
  "Derli",
  "Desfrutar",
  "Designpro",
  "Destesa",
  "Dhauz",
  "Diaggoias",
  "Diagonal",
  "Diamante",
  "Diamantino",
  "Diamond",
  "Dians",
  "Diase",
  "Dicam",
  "Diego",
  "Diferso",
  "Digital",
  "Dignissima",
  "Dimap",
  "Dimax",
  "Diminas",
  "Dinamica",
  "Diniz",
  "Dinizsms",
  "Dinox",
  "Diogo",
  "Direcao",
  "Direciona",
  "Direcional",
  "Dirtec",
  "Disal",
  "Distridrinks",
  "Divcom",
  "Diversao",
  "Diverso",
  "Divine",
  "Divino",
  "Divinopolis",
  "Diviseg",
  "Djalma",
  "Dmart",
  "Doctor",
  "Dolabella",
  "Domingos",
  "Donas",
  "Dopay",
  "Dorinvest",
  "Douglas",
  "Doutor",
  "Doutores",
  "Drako",
  "Drillbell",
  "Drive",
  "Droga",
  "Drogalife",
  "Dropbits",
  "Druck",
  "Drugstore",
  "Drummond",
  "Dsalles",
  "Dsensei,",
  "Dualex",
  "Duarte",
  "Duboi",
  "Dudalina",
  "Dudika",
  "Dully",
  "Dumont",
  "Duofood",
  "Dupla",
  "Duplo",
  "Duque",
  "Durco",
  "Durini",
  "Dynamic",
  "E-Smart",
  "E.C.F.",
  "E.E.E.S",
  "E.M.B",
  "Easygoingbrazil",
  "Easyvib",
  "Eccellenza",
  "Eco-Floor",
  "Ecogolden",
  "Ecomel-Eletrica",
  "Ecoplus",
  "Ecoshared",
  "Ecoverde",
  "Edifica",
  "Edificar",
  "Edipo",
  "Editora",
  "Edson",
  "Eduardo",
  "Educar",
  "Edudata",
  "Edutons",
  "Edvaldo",
  "Eedea",
  "Efata",
  "Efeito",
  "Efficacia",
  "Eficaz",
  "Ehconsultimob",
  "Elaine",
  "Eldorado",
  "Electric",
  "Electron",
  "Elegance",
  "Eletroart",
  "Eletrobolsas",
  "Eletrominas",
  "Elevar",
  "Elevemed",
  "Eleven",
  "Elglobal",
  "Eliana",
  "Eliptica",
  "Elisa",
  "Elisia",
  "Elita",
  "Elite",
  "Elitte",
  "Ellen",
  "Elleva",
  "Elogroup",
  "Elvisa",
  "Elyon",
  "Emais",
  "Emartins",
  "Embarquei",
  "Embrasil",
  "Embryofort",
  "Emccamp",
  "Emergi",
  "Emiliene",
  "Emporia",
  "Emporio",
  "Empresta",
  "Emunah",
  "Encantos",
  "Enceladus",
  "Endeavour",
  "Energie",
  "Energy",
  "Energyeletric",
  "Engeconsult",
  "Engedust",
  "Engefig",
  "Engehall",
  "Engelub",
  "Engemaia",
  "Engenho",
  "Engesys",
  "Engetop",
  "Engie",
  "Ennisten",
  "Ensinio",
  "Enterprise",
  "Entre",
  "Enveste",
  "Equaliza",
  "Equalizar",
  "Equilibrio",
  "Equipe",
  "Equipex",
  "Erika",
  "Escandinavia",
  "Escutart",
  "Esfera",
  "Esfeus",
  "Esmeralda",
  "Espaco",
  "Espatodea",
  "Espelho",
  "Esperanca",
  "Espeteria",
  "Esquina",
  "Essence",
  "Essencial",
  "Essencias",
  "Essenz",
  "Estacao",
  "Estevam",
  "Estevao",
  "Estilo",
  "Estrada",
  "Estrela",
  "Estrelas",
  "Estruturar",
  "Estudio",
  "Eternity",
  "Eumaco",
  "Eunides",
  "Europao",
  "Evandro",
  "Eveco",
  "Evemeve",
  "Eventuris",
  "Evidence",
  "Evipreste",
  "Evolua",
  "Evolution",
  "Evtrip",
  "Ewerton",
  "Exata",
  "Exato",
  "Exatta",
  "Excatran",
  "Excel",
  "Excelencias",
  "Excllusive",
  "Exclusiva",
  "Exitus",
  "Expandir",
  "Experience",
  "Express",
  "Expressa",
  "Expresso",
  "Exscelencia",
  "Extra",
  "Exxitus",
  "Eyder",
  "Fabio",
  "Faccilite",
  "Faceb",
  "Fachineli",
  "Facilita",
  "Facilite",
  "Facility",
  "Fagames",
  "Fageton",
  "Fagundes",
  "Falci",
  "Falcon",
  "Familia",
  "Family",
  "Farao",
  "Faria",
  "Fase2",
  "Fashionpro",
  "Fastlog",
  "Favani",
  "Fazendinhas",
  "Fe-Tech",
  "Fearless",
  "Feedback",
  "Fefis",
  "Felipe",
  "Feltrin",
  "Feltrotex",
  "Femmely",
  "Femon",
  "Fenelon",
  "Fenix",
  "Ferleite",
  "Fermar",
  "Fermat",
  "Fernanda",
  "Fernandes",
  "Fernando",
  "Ferrari",
  "Ferrasoldas",
  "Ferraz",
  "Ferreira",
  "Fersan",
  "Fersil",
  "Fertrans",
  "Festi",
  "Fguerra",
  "Fialho",
  "Fiber",
  "Ficus",
  "Fidenstech",
  "Fifty",
  "Figmed",
  "Figueiredo",
  "Filipe",
  "Filizzola",
  "Finances",
  "Find-Se",
  "Finger",
  "Fipal",
  "Firenze",
  "Firewalking",
  "Fischer",
  "Flabes",
  "Flashcolor",
  "Flavia",
  "Flavio",
  "Flecha",
  "Flexbroker",
  "Flexit",
  "Fliper",
  "Flordecereja",
  "Flordemim",
  "Floresta",
  "Florestas",
  "Florida",
  "Florris",
  "Focco",
  "Focus",
  "Fogos",
  "Fokko",
  "Folium",
  "Folle",
  "Fonseca",
  "Fontanella",
  "Fontes",
  "Fontoura",
  "Forca",
  "Forgreen",
  "Formalaser",
  "Fornalha",
  "Fortaleza",
  "Fortumel",
  "Fortuna",
  "Fortune",
  "Fraldas",
  "Fralmedi",
  "Framer",
  "Frames",
  "Franca",
  "Franco",
  "Francoise",
  "Franquia",
  "Frederico",
  "Freeart",
  "Frigelar",
  "Frigo",
  "Frigorifico",
  "Friovix",
  "Frota",
  "Fucsia",
  "Fulltech",
  "Fundicao",
  "Furonto",
  "Fusao",
  "Futura",
  "Futuro",
  "Fybra",
  "G.A.S",
  "Gabriel",
  "Gabriela",
  "Gabrielle",
  "Galale",
  "Galaxia",
  "Galeo",
  "Galiza",
  "Galvanomoderna",
  "Gamefic",
  "Garbo",
  "Garden",
  "Gargiulo",
  "Garupa",
  "Gaspar",
  "Gatti",
  "Gauche",
  "Ge&Af-",
  "Gecontrol",
  "Gelasa",
  "Gelte",
  "General",
  "Genes",
  "Genese",
  "Genesis",
  "Genial",
  "Geniri",
  "Genrich",
  "Geobase",
  "Geonorth",
  "Geoprime",
  "Geotest",
  "Geraes",
  "Geraldo",
  "Gerenciarte",
  "Germed",
  "Gerocare",
  "Gerson",
  "Gespublica",
  "Gesso",
  "Gestaff",
  "Gestao",
  "Getsemani",
  "Gideoni",
  "Gilfer",
  "Gilmarzinho",
  "Gilson",
  "Giltons",
  "Gimazzi",
  "Gisele",
  "Giulliana",
  "Glass",
  "Gleidmar",
  "Gleidson",
  "Gleisson",
  "Glenderson",
  "Glenio",
  "Glenmark",
  "Glicia",
  "Global",
  "Globo",
  "Gloria",
  "Gofurther",
  "Goiania",
  "Goldencliff",
  "Gollner",
  "Goltara",
  "Gomes",
  "Gominha",
  "Gontibel",
  "Gontijo",
  "Gootec",
  "Gorilla",
  "Gosat",
  "Gosyde",
  "Gpulse",
  "Graca",
  "Graciele",
  "Grafika",
  "Grajau",
  "Grande",
  "Graninox",
  "Granja",
  "Grano",
  "Grazielle",
  "Greco",
  "Green",
  "Grelato",
  "Grupo",
  "Gtime",
  "Guariba",
  "Guedini",
  "Guilherme",
  "Guimaraes",
  "Gulozitos",
  "Gunga",
  "Gurkha",
  "Gustavo",
  "H.Brand",
  "H.C.A",
  "Hajime",
  "Hakulabs",
  "Hallita",
  "Hammer",
  "Haras",
  "Hardy",
  "Harotec",
  "Harpyja",
  "Harsco",
  "Harvus",
  "Hashtag",
  "Hassegawa",
  "Havalan",
  "Havik",
  "Health",
  "Healthcare",
  "Heaven",
  "Heitor",
  "Helix",
  "Hello",
  "Hematef",
  "Henrique",
  "Herdade",
  "Heringer&Costa",
  "Heron",
  "Herrmann",
  "Hewlett",
  "Hexis",
  "Hidraucar",
  "Hidrauconect",
  "Hidraumult",
  "Hidrogeotecnica",
  "Hidropominas",
  "Hilane",
  "Hilario",
  "Himalaia",
  "Hinova",
  "Hiper",
  "Hipernnova",
  "Hiprofoods",
  "Hispeed",
  "Hk.Fitness",
  "Hm-Acompanhamento",
  "Holding",
  "Horizonte",
  "Horus",
  "Hpsapavini",
  "Hudson",
  "Human",
  "Humberto",
  "Hunterdev",
  "Hydra",
  "Hydro",
  "Hyper",
  "Iap-Estacionamento",
  "Ibipar",
  "Ibirite",
  "Ibrstock",
  "Ideal",
  "Idealiza",
  "Idear",
  "Iello",
  "Iepio",
  "Ifg-Industria",
  "Igapon",
  "Iglesias",
  "Ignacio",
  "Iguasport",
  "Iguatemi",
  "Ilumi",
  "Iluminar",
  "Ilumino",
  "Imagilab",
  "Imall",
  "Imatso",
  "Immobiliare",
  "Imople",
  "Impacto",
  "Imperio",
  "Imperium",
  "Importagene",
  "Indikey",
  "Infantus",
  "Infinity",
  "Influ",
  "Infoatualizacoes",
  "Infobook",
  "Infocalize",
  "Infoprint",
  "Inforbel",
  "Infrabrasil",
  "Ingest",
  "Injep",
  "Inloc",
  "Inova",
  "Inovare",
  "Inovart",
  "Inove",
  "Inspira",
  "Integra",
  "Inter",
  "Interativa",
  "Interface",
  "Interfort",
  "Interlink",
  "Internucleo",
  "Invasao",
  "Inventurar",
  "Inversiones",
  "Invicta",
  "Invictus",
  "Invista",
  "Iotew",
  "Irapuru",
  "Irmaos",
  "Irmara",
  "Irriga",
  "Isabela",
  "Isabele",
  "Isabella",
  "Ispnet",
  "Istoke",
  "Itainvest",
  "Itapecas",
  "Itech",
  "Itsec",
  "Ivana",
  "Izabela",
  "Izata",
  "J.C.A.",
  "J.F.F",
  "J.R.B",
  "Jaguar",
  "Jairo",
  "James",
  "Jamil",
  "Japaraiba",
  "Jaqueline",
  "Jardel",
  "Jardim",
  "Jatai",
  "Jayson",
  "Jbf-3",
  "Jefferson",
  "Jener",
  "Jessica",
  "Jmelo",
  "Joana",
  "Joaquim",
  "Jobel",
  "Johel",
  "Johnata",
  "Joker",
  "Jonamaco",
  "Jonathan",
  "Jorge",
  "Josiane",
  "Joslam",
  "Jota3",
  "Jovial",
  "Jrecomm",
  "Juatuba",
  "Jubela",
  "Julia",
  "Juliana",
  "Julianna",
  "Julio",
  "Junaves",
  "Junia",
  "Junio",
  "Junior",
  "Junnio",
  "Jupiter",
  "Jussara",
  "Justweb",
  "Kabral",
  "Kaeng",
  "Kairos",
  "Kaizen",
  "Kalunga",
  "Kangu",
  "Kania",
  "Karine",
  "Karisma",
  "Karistel-Com",
  "Karuna",
  "Kasap",
  "Kaster",
  "Katiuscia",
  "Katsuragi",
  "Kelvin",
  "Kenko",
  "Keren",
  "Kesser",
  "Keyte",
  "Kilar",
  "Kiosk",
  "Kitchens",
  "Klaus",
  "Kloen",
  "Koman",
  "Kompacta",
  "Kopell",
  "Korok",
  "Kpipes",
  "Kratein",
  "Krindges",
  "Kroqui",
  "Krypton",
  "Kundalini",
  "Kyokai",
  "L.M.Z.",
  "Labareda",
  "Labsynth",
  "Labthron",
  "Lacar",
  "Lacon",
  "Lacto",
  "Lafaiete",
  "Lagares",
  "Lagoa",
  "Laiara",
  "Laktin",
  "Lamas",
  "Lamed",
  "Lamego",
  "Lamifer",
  "Laminaco",
  "Lancc",
  "Lance",
  "Landaeta",
  "Lanna",
  "Lanza",
  "Lapidum",
  "Laris",
  "Larissa",
  "Laser",
  "Lasivi",
  "Latina",
  "Latino",
  "Lauar",
  "Laudo",
  "Laura",
  "Laurindo",
  "Lavaai",
  "Lavoro",
  "Leadec",
  "Leandro",
  "Leardini",
  "Leite",
  "Leles",
  "Lelis",
  "Lembrei",
  "Leogoodson",
  "Leonardo",
  "Leonidio",
  "Lepton",
  "Lerbach",
  "Leticia",
  "Lfmorais",
  "Liberato",
  "Libertvita",
  "Lider",
  "Lideranca",
  "Life-",
  "Lifecir",
  "Lilian",
  "Limeira",
  "Lincoln",
  "Linear",
  "Linked",
  "Lisboa",
  "Litoral",
  "Livia",
  "Lmelo",
  "Loader",
  "Lobol",
  "Locagyn",
  "Local",
  "Localar",
  "Localex",
  "Locamix",
  "Locamotocar",
  "Locar",
  "Locatec",
  "Locavip",
  "Locdente",
  "Locmvias",
  "Locsul",
  "Lodare",
  "Lofer",
  "Logos",
  "Logtime",
  "Logui",
  "Lola's",
  "Lonas",
  "Longevinutro",
  "Lopes",
  "Loren",
  "Lorenzo",
  "Lorraine",
  "Losen",
  "Lottus",
  "Lotus",
  "Lourdes",
  "Loureiro",
  "Lovec",
  "Lp2gp",
  "Lpsjx",
  "Lucas",
  "Lucia",
  "Luciana",
  "Luciano",
  "Ludicores",
  "Ludtke",
  "Luduna",
  "Lufap",
  "Lugar",
  "Lugui",
  "Luisa",
  "Luisinho",
  "Luiza",
  "Lumen",
  "Lumiar",
  "Lumin",
  "Luminus",
  "Lumni",
  "Lustosa",
  "Luvie",
  "Lygia",
  "Lynce",
  "M&Frq",
  "M.C.A.",
  "M.E.D",
  "M.H.L",
  "M.Hoehne",
  "M.L.B.",
  "Mace5",
  "Macieira",
  "Macoapec",
  "Macor",
  "Macosta",
  "Madegem",
  "Madel",
  "Madem",
  "Mademix",
  "Madevecchia",
  "Madri",
  "Maeng",
  "Magalhaes",
  "Magazine",
  "Maggi",
  "Magil",
  "Maguen",
  "Maimun",
  "Maior",
  "Maitre",
  "Majuly",
  "Makeover",
  "Makitec",
  "Maksid",
  "Maktro",
  "Malard",
  "Malote",
  "Malta",
  "Mamacita",
  "Mamae",
  "Mamprim",
  "Manancial",
  "Mangala",
  "Manganes",
  "Mania",
  "Manipulart",
  "Manlog",
  "Manoela",
  "Manserv",
  "Mapri",
  "Mar'a",
  "Maraba",
  "Maranhao",
  "Marapelu",
  "Marbella",
  "Marbo",
  "Marca",
  "Marcela",
  "Marcelle",
  "Marcelo",
  "Marcio",
  "Marco",
  "Marcondes",
  "Marcos",
  "Marcus",
  "Marejuparts",
  "Mares",
  "Marfix",
  "Marge",
  "Margon",
  "Maria",
  "Mariana",
  "Mariane",
  "Mariante",
  "Marilia",
  "Marilula",
  "Marina",
  "Marinetti",
  "Marini",
  "Mario",
  "Marisam",
  "Marlecy",
  "Marmoram",
  "Marolinda",
  "Marplan",
  "Martins",
  "Marzano",
  "Massa",
  "Massareto",
  "Master",
  "Master",
  "Mateus",
  "Matheaus",
  "Matheus",
  "Matriz",
  "Mauri",
  "Mauriana",
  "Mauricio",
  "Maurita",
  "Mauro",
  "Maximiano",
  "Maximo",
  "Maxintv",
  "Maxiotorrino",
  "Maxlab",
  "Maxxcont",
  "Mayara",
  "Maycon",
  "Maynarte",
  "Mayra",
  "Mayrink",
  "Mazza",
  "Mcont",
  "Mdgomide",
  "Mecasol",
  "Mecmining",
  "Med-Way",
  "Medcenter-",
  "Medclinic",
  "Medduo",
  "Medical",
  "Medicamental",
  "Medisil",
  "Medplus",
  "Medrado",
  "Medtech",
  "Meeonn",
  "Megusta",
  "Mehdef",
  "Meiriel",
  "Melplan",
  "Memil",
  "Memoria",
  "Mendes",
  "Mendonca",
  "Mendoza",
  "Menezes",
  "Menzoil",
  "Mepminas",
  "Mercantil",
  "Meridional",
  "Metabalance",
  "Metacons",
  "Metadil",
  "Metais",
  "Metalfund",
  "Metha",
  "Metis",
  "Metodo",
  "Metrics",
  "Michel",
  "Midas",
  "Migdal",
  "Migrar",
  "Milenio",
  "Milkone",
  "Milla",
  "Milleniun",
  "Millionaires",
  "Milton",
  "Minas",
  "Minerageo",
  "Mineratech",
  "Minerva",
  "Minexx",
  "Minha",
  "Miranda",
  "Mirante",
  "Miriam",
  "Mister",
  "Misters",
  "Mixservice",
  "Mobile",
  "Mocca",
  "Modena",
  "Moderna",
  "Modifie",
  "Modumood",
  "Monaco",
  "Moncloa",
  "Mondot",
  "Monells",
  "Money",
  "Monica",
  "Monique",
  "Monitorama",
  "Montaine",
  "Montar",
  "Monte",
  "Monteiro",
  "Montenegro",
  "Montes",
  "Montre",
  "Montreal",
  "Morada",
  "Moraes",
  "Morais",
  "Morar",
  "Moreira",
  "Morelia",
  "Morena",
  "Morro",
  "Mosca",
  "Motel",
  "Motion",
  "Motovai",
  "Motti",
  "Motus",
  "Mount",
  "Moura",
  "Moutiny",
  "Movarte",
  "Moveis",
  "Mozzer",
  "Mpedretti",
  "Ms-Com",
  "Msouki",
  "Mssolucoes",
  "Mtech",
  "Mulan",
  "Multcom",
  "Multgerais",
  "Multicare",
  "Multicorp",
  "Multiluz",
  "Multipe",
  "Multipla",
  "Multiplan",
  "Multiplicar",
  "Multiprotecao",
  "Multitask",
  "Multivarejo",
  "Multiverse",
  "Multmax",
  "Mundi",
  "Mundial",
  "Mundivox",
  "Mundo",
  "Mundy",
  "Muniz",
  "Musica",
  "Mutig",
  "Mwsoft",
  "My-Sab",
  "Myclipp",
  "Mydia",
  "Myrrha",
  "Nacional",
  "Naldo",
  "Nalrad",
  "Namaste",
  "Nanicorp",
  "Natalia",
  "Nathalia",
  "Nativa",
  "Nauporto",
  "Naves",
  "Nawii",
  "Nefrofisio",
  "Nefromed",
  "Nelson",
  "Nemesis",
  "Nestle",
  "Neves",
  "Newfouldland",
  "Newkar",
  "Nicia",
  "Niclo's",
  "Nicolato",
  "Nicole",
  "Nidia",
  "Nikre",
  "Nilson",
  "Nimtech",
  "Nistaltec",
  "Nitro",
  "Nitrovesan",
  "Nobel",
  "Nobre",
  "Nogueira",
  "Nonaka",
  "Noord",
  "Noronha",
  "Norpem",
  "Norpet",
  "Norte",
  "Norteboi",
  "Nortel",
  "Nossa",
  "Nostro",
  "Novaagro",
  "Novatech",
  "November",
  "Novidade",
  "Novomonte",
  "Novotempo",
  "Nucleo",
  "Nueva",
  "Nunes",
  "Nutre",
  "Nutri",
  "Nutriave",
  "Nuvem",
  "Nyland",
  "Oakberry",
  "Oakers",
  "Oasis",
  "Obisidian",
  "Oceano",
  "Ocular",
  "Odonto",
  "Odontoclark",
  "Odontogroup",
  "Odontoprotese",
  "Odontosaud",
  "Oficio",
  "Okbahia",
  "Okone",
  "Olhos",
  "Olimpiki",
  "Oliveira",
  "Oliver",
  "Olympus",
  "Omini",
  "Oncoclass",
  "Oncoclinicas",
  "Oncoservice",
  "Opavendi",
  "Opcao",
  "Optica",
  "Optical",
  "Orcim",
  "Orcose",
  "Orfire",
  "Oriental",
  "Origem",
  "Origo",
  "Orion",
  "Ortega",
  "Orthos",
  "Ortogeraes",
  "Orzel",
  "Osas,",
  "Osesp",
  "Oswaldo",
  "Otavio",
  "Otica",
  "Otimiza",
  "Otoman",
  "Otopalmas",
  "Ottobock",
  "Outlier",
  "P.H.C.",
  "Pacifico",
  "Padre",
  "Pagseguro",
  "Painitec",
  "Pais,",
  "Pajucara",
  "Palacio",
  "Paladar",
  "Palantir",
  "Palavra",
  "Palmacea",
  "Paloma",
  "Pampulha",
  "Panela",
  "Pangute",
  "Panificadora",
  "Panolli",
  "Panoramica",
  "Pantanal",
  "Papillon",
  "Parabellum",
  "Parada",
  "Paragram",
  "Paraiso",
  "Paraizo",
  "Paraki",
  "Paramedicos",
  "Paranoid",
  "Parapuan",
  "Parauna",
  "Parceria",
  "Parede",
  "Park.Me",
  "Parkfacil",
  "Parliminas",
  "Parly",
  "Parque",
  "Participacoes",
  "Passarelli",
  "Passos",
  "Pastel",
  "Patricia",
  "Patried",
  "Patrimar",
  "Patrimonio",
  "Paujenky",
  "Paula",
  "Paulao",
  "Paulino",
  "Paulo",
  "Pavanelli",
  "Payme",
  "Pdart",
  "Peasla",
  "Pedra",
  "Pedro",
  "Pedrosa",
  "Pegada",
  "Peixe",
  "Peixoto",
  "Pense",
  "Pentagono",
  "Pepsico",
  "Perdigao",
  "Pereira",
  "Perez",
  "Perfilados",
  "Performance",
  "Perlima",
  "Perseveranca",
  "Personal",
  "Perspectiva",
  "Pescados",
  "Petrus",
  "Petrvs",
  "Phoenix",
  "Piaui",
  "Picanha",
  "Picksell",
  "Piemonte",
  "Pieri",
  "Pierre",
  "Pilar",
  "Pilates",
  "Piloto",
  "Pimentas",
  "Pinguim",
  "Pinheiro",
  "Pinopar",
  "Piramide",
  "Pires",
  "Pirolli",
  "Piscicultura",
  "Pitaya",
  "Pitstop",
  "Pizelli",
  "Plainsoft",
  "Plamev",
  "Planalto",
  "Planam",
  "Planejar",
  "Planeta",
  "Plano",
  "Planscoop",
  "Plante",
  "Plataforma",
  "Platz",
  "Playvender",
  "Plaza",
  "Plbrasil",
  "Plenarium",
  "Pluriforme",
  "Pnconcept",
  "Point",
  "Poket",
  "Polab",
  "Polarix",
  "Polcaro",
  "Polen",
  "Polilog",
  "Poliprene",
  "Pollyana",
  "Pollyvet",
  "Pontal",
  "Ponto",
  "Pontodigital",
  "Pontual",
  "Portico",
  "Porto",
  "Postinho",
  "Posto",
  "Potencia",
  "Potencial",
  "Potti",
  "Poupou",
  "Power",
  "Ppottie",
  "Pr.Com",
  "Praca",
  "Prado",
  "Praendex",
  "Prata",
  "Pratica",
  "Pratique",
  "Pravan",
  "Prazeres",
  "Precisa",
  "Prediletos",
  "Premier",
  "Premium",
  "Prensatec",
  "Presbyte",
  "Prestar",
  "Prevent",
  "Pride",
  "Prima",
  "Primar",
  "Primavera",
  "Primavia",
  "Primazia",
  "Prime",
  "Primecert",
  "Primer",
  "Primora",
  "Primos",
  "Primus",
  "Princesa",
  "Print",
  "Printtape",
  "Priscila",
  "Priscilla",
  "Prisma",
  "Privacy",
  "Privilegium",
  "Pro-Life",
  "Pro-Safra",
  "Proadm",
  "Proart",
  "Proauto",
  "Procopio",
  "Procurement",
  "Prodege",
  "Proenja",
  "Profit",
  "Progeo",
  "Progresso",
  "Progressus",
  "Projecao",
  "Projecon",
  "Project",
  "Projeta",
  "Projetar",
  "Proline",
  "Promofoot",
  "Promover",
  "Propan",
  "Propax",
  "Proposita",
  "Prosol",
  "Prosource",
  "Prosync",
  "Protege",
  "Proter",
  "Provendas",
  "Provita",
  "Prudente",
  "Psicowork",
  "Psinova",
  "Publicore",
  "Puranjot",
  "Pureamber",
  "Px379",
  "Qrtz21",
  "Quadrilha",
  "Qualidade",
  "Quality",
  "Qualivida",
  "Qualy",
  "Quantico",
  "Queiroz",
  "Queretaro",
  "Quero",
  "Querubim",
  "Quest",
  "Quick",
  "Quintal",
  "Quintvs",
  "Quinze",
  "Quites",
  "R.G.S",
  "R.O.G.",
  "R.T.Empreend.E",
  "R2tech",
  "Racks",
  "Racri",
  "Radar",
  "Radiadores",
  "Radio",
  "Rafael",
  "Rafaela",
  "Rafarillo",
  "Rafas",
  "Raimunda",
  "Raizes",
  "Rajao",
  "Ralfes",
  "Ramada",
  "Ramalho",
  "Ramiro",
  "Ramon",
  "Ramos",
  "Rampa",
  "Ranking",
  "Raphael",
  "Rapharm",
  "Rapido",
  "Rappi",
  "Raquel",
  "Rausch",
  "Ravena",
  "Rayane",
  "Rayfran",
  "Rbartolomeu",
  "Rbernardes",
  "Reabilitar",
  "Realidade",
  "Realiza",
  "Recacenter",
  "Reccode",
  "Recicla",
  "Recife",
  "Recovery",
  "Recriar",
  "Recrom",
  "Redentor",
  "Refrapi",
  "Regularize",
  "Reliquia",
  "Remaclo",
  "Remar",
  "Remedcar",
  "Rempecas",
  "Renasce",
  "Renata",
  "Renato",
  "Rendel",
  "Renova",
  "Renovar",
  "Renovarh",
  "Rentaldbr",
  "Reobote",
  "Reodonto",
  "Repel",
  "Resende",
  "Resenha",
  "Reserva",
  "Resma",
  "Restart",
  "Result",
  "Resultset",
  "Retalhao",
  "Retrogosto",
  "Revenda",
  "Revestplus",
  "Revire",
  "Revitalize",
  "Reviva",
  "Revolucao",
  "Revtec",
  "Rhetan",
  "Riata",
  "Ribeiro",
  "Riber",
  "Ricardo",
  "Righi",
  "Riquel",
  "Risen",
  "Risotolandia",
  "Ristoris",
  "Ritmo",
  "Rivelli",
  "Rivem",
  "Rlbdc",
  "Robadel",
  "Roberta",
  "Roberto",
  "Robson",
  "Robspierre",
  "Rocaro",
  "Rocha",
  "Rocket",
  "Rodoanel",
  "Rodoflech",
  "Rodogil",
  "Rodolfo",
  "Rodoquality",
  "Rodoresende",
  "Rodorocha",
  "Rodoroesel",
  "Rodoviario",
  "Rodrigo",
  "Rodrigues",
  "Rogerio",
  "Romec",
  "Romir",
  "Romulo",
  "Rooftop",
  "Roosevelt",
  "Rosangela",
  "Roseane",
  "Roselene",
  "Rosenvaldo",
  "Rosilene",
  "Rossi",
  "Rotieh",
  "Rotta",
  "Rouands",
  "Rubber",
  "Rubens",
  "Russas",
  "S.A.M",
  "Sabino",
  "Sabor",
  "Saboreo",
  "Sabrina",
  "Sacramento",
  "Saewel",
  "Safety",
  "Safira",
  "Sagaz",
  "Saidera",
  "Salatini",
  "Salazar",
  "Sales",
  "Salto",
  "Salvato",
  "Salvatore",
  "Samap",
  "Samax",
  "Samir",
  "Samora",
  "Sampaio",
  "Sanar",
  "Sanches",
  "Sandra",
  "Sanduicheria",
  "Sanna",
  "Santa",
  "Santana",
  "Santex",
  "Santiago",
  "Santo",
  "Santos",
  "Saomiguelito",
  "Sapiens",
  "Sara:",
  "Sardio",
  "Saritur",
  "Sartori",
  "Satoru",
  "Saude",
  "Saulo",
  "Savini",
  "Savio",
  "Scapole",
  "Scarpelli",
  "Scatolino",
  "Scentec",
  "Schiavon",
  "Schiavoni",
  "Schott",
  "Schultz-Inga",
  "Schwan",
  "Scire",
  "Scopo",
  "Scopum",
  "Sdruves",
  "Searchonmath",
  "Sebel",
  "Seculos",
  "Seculus",
  "Securitas",
  "Sefer",
  "Seglar",
  "Seguitel-",
  "Seguro",
  "Seixas",
  "Selecta",
  "Seleto",
  "Seletro",
  "Selma",
  "Semente",
  "Semip",
  "Sendas",
  "Senetic",
  "Senhor",
  "Seniors",
  "Senna",
  "Sensymed",
  "Serafim",
  "Sereno",
  "Sergiotour",
  "Serilon",
  "Sermanco",
  "Sermet",
  "Serpins",
  "Serra",
  "Serramada",
  "Service",
  "Servicob",
  "Servicos",
  "Servimed",
  "Servitel",
  "Servix",
  "Sesoft",
  "Seuacai.Com",
  "Sevem",
  "Sexto",
  "Shaira",
  "Shammah",
  "Sheep",
  "Shelby",
  "Shirley",
  "Sidnei",
  "Sierra",
  "Signus",
  "Sihune",
  "Silkplast",
  "Silos-Corretora",
  "Silva",
  "Silvamed",
  "Silvanio",
  "Silveira",
  "Silvia",
  "Simex",
  "Simples",
  "Simplific",
  "Sinalmig",
  "Sinaway",
  "Sipat",
  "Siqueira",
  "Sirius-Empresa",
  "Sirycaskudo",
  "Sismogeo",
  "Sistema",
  "Siveal",
  "Skyio",
  "Slumaz",
  "Smarkt",
  "Smart",
  "Smartmedic",
  "Smarttec",
  "Smilink",
  "Smith",
  "Smmbr",
  "Snapimov",
  "Snouts",
  "Soares",
  "Sociedade",
  "Socorro",
  "Software",
  "Solange",
  "Solar",
  "Solarys",
  "Solfi",
  "Solidez",
  "Soliens",
  "Sollab",
  "Solocao",
  "Soltec",
  "Solucao",
  "Solucionares",
  "Solucoes",
  "Soluti",
  "Solution",
  "Solve",
  "Somar",
  "Somma",
  "Somma-Produtos",
  "Sonda",
  "Sondeq",
  "Sonhar",
  "Sonhos",
  "Sonia",
  "Sopec",
  "Sophos",
  "Soraggi",
  "Soraya",
  "Sortec",
  "Sorveteria",
  "Souza",
  "Souzalog",
  "Sovimaq",
  "Special",
  "Speed",
  "Spinafre",
  "Spolaor",
  "Spyer",
  "Staff",
  "Stahl",
  "Start",
  "Startup",
  "Starweb",
  "Stats",
  "Status",
  "Std'avila",
  "Stella",
  "Stephane",
  "Stillo",
  "Stilus",
  "Stiviny",
  "Stonenge",
  "Stories",
  "Stork",
  "Storm",
  "Strada",
  "Stratas",
  "Streamxp",
  "Street",
  "Studio",
  "Style",
  "Subestacoes",
  "Sunnypro",
  "Super",
  "Superacao",
  "Superbloco",
  "Superlog",
  "Supermercado",
  "Superpet",
  "Suporte",
  "Suprema",
  "Suprir",
  "Surgery",
  "Suricate",
  "Sushi",
  "Symme",
  "Synapse",
  "Syngenta",
  "Sysla",
  "Sysmap",
  "Taigeta",
  "Taime",
  "Taioba",
  "Takenaka",
  "Talento",
  "Taler",
  "Talher",
  "Tamandare",
  "Tammaro",
  "Tania",
  "Taormina",
  "Tapajos",
  "Tappo",
  "Target",
  "Tarkka",
  "Tavares",
  "Tdnet",
  "Tec-End",
  "Techcert",
  "Techno",
  "Technology",
  "Techpark",
  "Techsaber",
  "Techsat",
  "Techsys",
  "Teckna",
  "Teclov",
  "Tecnijet",
  "Tecnorental",
  "Tecnotorc",
  "Tecnovida",
  "Teixeira",
  "Telegas",
  "Teles",
  "Teletex",
  "Tellus",
  "Tempera",
  "Temperos",
  "Templo",
  "Tempo",
  "Tenda",
  "Teorema",
  "Termale",
  "Ternium",
  "Terpel",
  "Terra",
  "Terracrua",
  "Terraplanagem",
  "Terreiro",
  "Territorio",
  "Tetris",
  "Texas",
  "Tfecom",
  "Thais",
  "Thalc",
  "Thales",
  "Thassia",
  "Theiar",
  "Thiago",
  "Thiara",
  "Thierry",
  "Thlog",
  "Thygre",
  "Tiago",
  "Tida&Apos;S",
  "Tiger",
  "Tigrao",
  "Tilambuco",
  "Tilix",
  "Tmsoft",
  "Todomed",
  "Together",
  "Toledo",
  "Tomografia",
  "Toninho",
  "Toniolo",
  "Topazio",
  "Topercar",
  "Topfer",
  "Torcal",
  "Tormen",
  "Torre",
  "Torres",
  "Torrezan",
  "Total",
  "Totallimp",
  "Tottal",
  "Tower",
  "Towngo",
  "Tracao",
  "Track",
  "Traco",
  "Trade",
  "Trading",
  "Traffic",
  "Trakassist",
  "Trampolim",
  "Tranal",
  "Trans",
  "Trans-Assis",
  "Trans-Manga",
  "Transbag",
  "Transblessed",
  "Transchaves",
  "Transcol",
  "Transdis",
  "Transenario",
  "Transfasi",
  "Transformar",
  "Transilian",
  "Transkompa",
  "Transli",
  "Transmarcon",
  "Transmobilia",
  "Transmutare",
  "Transnascimento",
  "Transp",
  "Transpedrosa",
  "Transportadora",
  "Transportar",
  "Transporte",
  "Transportes",
  "Transpower",
  "Transresiduos",
  "Transrotac",
  "Transvenuto",
  "Transversa",
  "Tratar",
  "Trator",
  "Tratorallis",
  "Travassos",
  "Traveltech",
  "Treinar",
  "Treinatec",
  "Trelele",
  "Trelsa",
  "Trends",
  "Trentin",
  "Treviso",
  "Triade",
  "Triangulo",
  "Triggo",
  "Trilhas",
  "Trimak",
  "Trinta",
  "Tripium",
  "Tripla",
  "Triunfo",
  "Trivecta",
  "Trodrigues",
  "Tropical",
  "Trust",
  "Tudobom",
  "Tuktuk&Apos;S",
  "Turtle",
  "Tuttiagro",
  "U4crypto",
  "Uai-Tech",
  "Uaifoot",
  "Ubaminas",
  "Uchoa",
  "Ulihort",
  "Umanse",
  "Umbelino",
  "Unibras",
  "Unica",
  "Unifi",
  "Unifort",
  "Unimar",
  "Unimed",
  "Unimix",
  "Unique",
  "United",
  "Universal",
  "Universo",
  "Upala",
  "Upresets",
  "Urbandog",
  "Uriah",
  "Usina",
  "V&Amp;G",
  "V-Tor",
  "Vacon",
  "Vahpt",
  "Valefort",
  "Valenca",
  "Valeria",
  "Valicar",
  "Vallourec",
  "Vance",
  "Vanda",
  "Vanessa",
  "Vapor",
  "Vargem",
  "Vasconcelos",
  "Vasmore",
  "Vasquez",
  "Vbier",
  "Vehmont",
  "Velis",
  "Velog",
  "Veloso",
  "Velut",
  "Vend-Minas",
  "Vendas",
  "Venko",
  "Venturix",
  "Verbo",
  "Verda",
  "Verde",
  "Veridiane",
  "Versailles",
  "Versalhes",
  "Versalles",
  "Versania",
  "Versatil",
  "Vertentes",
  "Vertex",
  "Vertice",
  "Vetscience",
  "Viabilidade",
  "Viacao",
  "Viafor",
  "Viaje",
  "Vialoc",
  "Viana",
  "Vianna",
  "Viasom",
  "Viasuperlog",
  "Vibrom",
  "Vicio",
  "Victor",
  "Vidasenfoco",
  "Vidotti",
  "Vidroalos",
  "Viegas",
  "Vieira",
  "Vifam",
  "Vigore",
  "Vilania",
  "Vilar",
  "Vilela",
  "Villa",
  "Villaca",
  "Vinces",
  "Vinicius",
  "Vinteum",
  "Virtual",
  "Virtuous",
  "Virtus",
  "Visao",
  "Viseu",
  "Visium",
  "Vista",
  "Vital",
  "Vitalizze",
  "Vitor",
  "Vitoria",
  "Vitrum",
  "Vivenzo",
  "Viver",
  "Viviane",
  "Voikos",
  "Volgen",
  "Volkssete",
  "Volts",
  "Vortex",
  "Vortx",
  "Vostro",
  "Vouguinha",
  "Vsantos",
  "Vulcanizadora",
  "Wagner",
  "Waldir",
  "Waleman",
  "Walesuno",
  "Walue",
  "Wania",
  "Warenhaus",
  "Wasabi",
  "Washington",
  "Webfize",
  "Webmar",
  "Wellington",
  "Welmag",
  "Wendel",
  "Whisper",
  "Whmpf",
  "Wiliam",
  "Willian&Apos",
  "Wolff",
  "Wonder",
  "Wp-It",
  "Wpdigital",
  "Wrinklefree",
  "Wsrmc",
  "Wtrade",
  "Xapuri",
  "Xavier",
  "Yahweh",
  "Yaren",
  "Years",
  "Yellow",
  "Yesblack",
  "Yogui",
  "Yoshida",
  "Zampar",
  "Zampier",
  "Zaneh",
  "Zansou",
  "Zelar",
  "Zicair",
  "Znove",
  "Zoiao",
  "Zopone",
  "Zulma",
  "Zunzarren",
  "Zwetkoff,",
];
const NOMES_MASCULINOS = [
  "Abilio",
  "Abner",
  "Abraao",
  "Abraham",
  "Abrelino",
  "Acassio",
  "Achiles",
  "Acilon",
  "Adacir",
  "Adahyr",
  "Adail",
  "Adailton",
  "Adair",
  "Adalberto",
  "Adalmo",
  "Adauto",
  "Adebola",
  "Adeilson",
  "Adelino",
  "Adelson",
  "Ademar",
  "Ademir",
  "Adenilson",
  "Aderito",
  "Adevaldo",
  "Adilson",
  "Adimar",
  "Adonis",
  "Adriano",
  "Adrieu",
  "Aecio",
  "Afonso",
  "Aginaldo",
  "Agnaldo",
  "Agner",
  "Agostinho",
  "Aguinaldo",
  "Aguinelo",
  "Agustavo",
  "Ailtom",
  "Ailton",
  "Airton",
  "Ajonadab",
  "Alair",
  "Alberame",
  "Alberino",
  "Albert",
  "Albertino",
  "Alberto",
  "Alcides",
  "Alcimar",
  "Alderico",
  "Aldrin",
  "Aldrovando",
  "Alecssander",
  "Alenilton",
  "Alessandro",
  "Alexander",
  "Alexandre",
  "Alexandrino",
  "Alexis",
  "Alfredo",
  "Alipio",
  "Alison",
  "Alisson",
  "Allan",
  "Allanderson",
  "Allison",
  "Allysson",
  "Almerindo",
  "Almir",
  "Almiro",
  "Almisio",
  "Alonso",
  "Aloysio",
  "Altair",
  "Altamar",
  "Altino",
  "Aluisio",
  "Aluizio",
  "Alvaniro",
  "Alvaro",
  "Alverino",
  "Amador",
  "Amael",
  "Amandio",
  "Amarildo",
  "Amauri",
  "Americo",
  "Amilcar",
  "Amilton",
  "Amires",
  "Analdo",
  "Anderson",
  "Andre",
  "Andrey",
  "Angelo",
  "Anibal",
  "Anselmo",
  "Antenor",
  "Antonio",
  "Aparecido",
  "Arenir",
  "Aristides",
  "Arivaldo",
  "Arlen",
  "Arlindo",
  "Armelindo",
  "Armindo",
  "Arnaldo",
  "Aroldo",
  "Arthur",
  "Artur",
  "Athos",
  "Atila",
  "Augusto",
  "Aureliano",
  "Aurelio",
  "Aureo",
  "Aurilio",
  "Avelar",
  "Aylton",
  "Bartolomeu",
  "Beckenbauer",
  "Belarmino",
  "Benedito",
  "Benvindo",
  "Bernard",
  "Bernardo",
  "Bianor",
  "Braulio",
  "Brendo",
  "Brenner",
  "Breno",
  "Brunno",
  "Bruno",
  "Bryan",
  "Cacio",
  "Caique",
  "Caleb",
  "Calebe",
  "Calixto",
  "Camilo",
  "Candido",
  "Carlin",
  "Carlindo",
  "Carlo",
  "Carlos",
  "Carpegyane",
  "Cassimiro",
  "Cassio",
  "Cassiosclei",
  "Castelar",
  "Cefas",
  "Celio",
  "Celso",
  "Cesar",
  "Cesarina",
  "Cesario",
  "Cezer",
  "Charles",
  "Charliston",
  "Charlles",
  "Charmon",
  "Christian",
  "Christiano",
  "Christofer",
  "Christopher",
  "Cicero",
  "Cidnei",
  "Cilas",
  "Claudete",
  "Claudiano",
  "Claudinei",
  "Claudiney",
  "Claudino",
  "Claudio",
  "Claudionor",
  "Clayton",
  "Cleber",
  "Clebio",
  "Clebson",
  "Cleidson",
  "Cleiton",
  "Cleizer",
  "Clenio",
  "Cleomir",
  "Cleriston",
  "Clesio",
  "Clever",
  "Cleverson",
  "Cleverton",
  "Cleyton",
  "Clorinto",
  "Cloves",
  "Clovis",
  "Cristian",
  "Cristiano",
  "Cristovam",
  "Custodio",
  "Cyrillo",
  "Dalmar",
  "Dalmirio",
  "Damiao",
  "Dangelo",
  "Daniel",
  "Danilo",
  "Darci",
  "Darcy",
  "Dario",
  "Darlan",
  "Darone",
  "Darvahy",
  "David",
  "Davidson",
  "Dayvid",
  "Dayvison",
  "Decio",
  "Deivid",
  "Deivison",
  "Deivisson",
  "Deivson",
  "Dejair",
  "Delaney",
  "Delco",
  "Delio",
  "Delphino",
  "Delton",
  "Delvair",
  "Delvani",
  "Demilson",
  "Denilson",
  "Denir",
  "Denis",
  "Denys",
  "Derbe",
  "Derci",
  "Dercio",
  "Dercy",
  "Derli",
  "Derodete",
  "Deusdete",
  "Devailson",
  "Deyvisson",
  "Dickson",
  "Diego",
  "Dieverson",
  "Dilermando",
  "Dilio",
  "Dilson",
  "Dimas",
  "Dimitri",
  "Dinai",
  "Diobelso",
  "Diogenes",
  "Diogo",
  "Diolino",
  "Diomar",
  "Dionisio",
  "Dirceu",
  "Diumaire",
  "Divino",
  "Dleissander",
  "Dolvino",
  "Domicio",
  "Domingos",
  "Donald",
  "Doriedson",
  "Dorneles",
  "Douglas",
  "Dreyfus",
  "Duilio",
  "Durval",
  "Dyhego",
  "Edcarlos",
  "Ederson",
  "Edevaldo",
  "Edevan",
  "Edgar",
  "Edgard",
  "Edicarlos",
  "Edilson",
  "Edimar",
  "Edimilson",
  "Edinilson",
  "Edione",
  "Ediplo",
  "Edivaldo",
  "Edivar",
  "Edivilson",
  "Edmar",
  "Edmerson",
  "Edmilson",
  "Edmund",
  "Edmundo",
  "Ednaldo",
  "Ednei",
  "Edson",
  "Eduardo",
  "Edvaldo",
  "Edvane",
  "Efigenio",
  "Efraim",
  "Efrain",
  "Eiquer",
  "Elanio",
  "Elcienes",
  "Elcio",
  "Eleaquim",
  "Elenilson",
  "Eleonardo",
  "Elerson",
  "Elias",
  "Elicio",
  "Eliseu",
  "Elismar",
  "Elito",
  "Elizael",
  "Elizeu",
  "Eloivaldo",
  "Elquias",
  "Elton",
  "Elvando",
  "Elvio",
  "Emanuel",
  "Emerson",
  "Emidio",
  "Emivalter",
  "Emizarlan",
  "Enedino",
  "Enilson",
  "Enitez",
  "Enivaldo",
  "Enoque",
  "Enzio",
  "Ephigenio",
  "Erciso",
  "Ergson",
  "Erick",
  "Erico",
  "Erimar",
  "Erivaldo",
  "Erlon",
  "Ernane",
  "Ernani",
  "Esdras",
  "Espedito",
  "Esperidiao",
  "Estanislau",
  "Estenio",
  "Estevao",
  "Etelvino",
  "Etevaldo",
  "Eudes",
  "Eurico",
  "Eustachio",
  "Eustaquio",
  "Evaldo",
  "Evandro",
  "Evanildo",
  "Evaristo",
  "Everaldo",
  "Everson",
  "Everton",
  "Ewerton",
  "Expedito",
  "Eymard",
  "Ezequiel",
  "Fabiano",
  "Fabio",
  "Fabricio",
  "Fabrizzio",
  "Fagner",
  "Farley",
  "Faustino",
  "Fausto",
  "Federico",
  "Feliciano",
  "Felipe",
  "Fellipe",
  "Fernando",
  "Filipe",
  "Filipo",
  "Fillipe",
  "Flavio",
  "Florentino",
  "Floriano",
  "Floripes",
  "Francesco",
  "Francisco",
  "Francys",
  "Frank",
  "Franklin",
  "Frederico",
  "Frontino",
  "Gabriel",
  "Gedivaldo",
  "Geiel",
  "Genecy",
  "Genesis",
  "Genilson",
  "Gentil",
  "Georg",
  "George",
  "Geovane",
  "Geraldino",
  "Geraldo",
  "Gercino",
  "Gerhard",
  "Germin",
  "Gerson",
  "Geterson",
  "Getulio",
  "Gilberto",
  "Gildasio",
  "Gildomar",
  "Gilmar",
  "Gilson",
  "Gilton",
  "Gilvan",
  "Giorge",
  "Giorgio",
  "Giovanni",
  "Giovanno",
  "Girley",
  "Giusepe",
  "Glauber",
  "Glaubert",
  "Glaucio",
  "Glauco",
  "Glaudson",
  "Glayson",
  "Gleidson",
  "Gleison",
  "Gleisson",
  "Glender",
  "Glenio",
  "Goncalo",
  "Guilherme",
  "Guillermo",
  "Gumercindo",
  "Gustavo",
  "Habib",
  "Hadriel",
  "Hamilton",
  "Harisson",
  "Harle",
  "Harley",
  "Harolde",
  "Harrison",
  "Harry",
  "Hebert",
  "Heccy",
  "Heitor",
  "Helbert",
  "Helcio",
  "Helder",
  "Helio",
  "Heliton",
  "Heloi",
  "Helvecio",
  "Henri",
  "Henrique",
  "Heraldo",
  "Herculano",
  "Hercules",
  "Herick",
  "Herikles",
  "Hermes",
  "Hermione",
  "Hernando",
  "Heron",
  "Herval",
  "Hiago",
  "Hidemilson",
  "Hiero",
  "Hildemar",
  "Hildo",
  "Himald",
  "Hircus",
  "Honorio",
  "Hosane",
  "Hudson",
  "Huelton",
  "Hueslen",
  "Humberto",
  "Ibere",
  "Ildefonso",
  "Ilson",
  "Inacio",
  "Inocencio",
  "Iolando",
  "Irineu",
  "Isaac",
  "Isael",
  "Isaias",
  "Isaque",
  "Isaurino",
  "Ismael",
  "Ismar",
  "Isnard",
  "Israel",
  "Itael",
  "Itagiba",
  "Italo",
  "Itamar",
  "Ivair",
  "Ivaldo",
  "Ivanilson",
  "Izaias",
  "Izidoro",
  "Jabes",
  "Jackson",
  "Jacob",
  "Jacques",
  "Jader",
  "Jaderson",
  "Jadilson",
  "Jadir",
  "Jaidson",
  "Jailton",
  "Jaime",
  "James",
  "Jamesson",
  "Jamilson",
  "Janciel",
  "Jandeci",
  "Jander",
  "Jandir",
  "Janir",
  "Janis",
  "Jansen",
  "Janser",
  "Januario",
  "Jarbas",
  "Jardel",
  "Jasmiro",
  "Jaudemir",
  "Jayme",
  "Jedesson",
  "Jeferson",
  "Jefferson",
  "Jelson",
  "Jenerson",
  "Jeronimo",
  "Jerry",
  "Jesse",
  "Jesuino",
  "Jesus",
  "Jhonat",
  "Jhonathan",
  "Jhonattan",
  "Jhonne",
  "Jhonny",
  "Jimmy",
  "Joanas",
  "Joaquim",
  "Jocelino",
  "Johnny",
  "Jonas",
  "Jonatas",
  "Jonathan",
  "Jonathas",
  "Jordao",
  "Jordeao",
  "Jorge",
  "Josafa",
  "Joselino",
  "Josemar",
  "Josenir",
  "Josias",
  "Josiel",
  "Josimar",
  "Jovenil",
  "Jovino",
  "Jozias",
  "Juares",
  "Juarez",
  "Juari",
  "Jucelino",
  "Juciney",
  "Juliano",
  "Julio",
  "Junio",
  "Jurandir",
  "Juscelino",
  "Jusimagno",
  "Juventino",
  "Kacio",
  "Kaique",
  "Kalil",
  "Kayllon",
  "Keller",
  "Kelmer",
  "Kelone",
  "Kelvin",
  "Kenneth",
  "Keuller",
  "Keven",
  "Kevin",
  "Kleber",
  "Klelton",
  "Laercio",
  "Laerte",
  "Lander",
  "Laurindo",
  "Lauro",
  "Lazaro",
  "Leandro",
  "Lecio",
  "Ledson",
  "Lemonour",
  "Lenir",
  "Leodante",
  "Leonardo",
  "Leonidas",
  "Leonidio",
  "Levindo",
  "Libanio",
  "Licinio",
  "Licio",
  "Lidelson",
  "Livio",
  "Livyston",
  "Lorivaldo",
  "Lourenco",
  "Lourisvaldo",
  "Lourival",
  "Lowran",
  "Lucas",
  "Lucca",
  "Luccas",
  "Luciano",
  "Lucimar",
  "Lucio",
  "Luzmar",
  "Madjer",
  "Magno",
  "Magnum",
  "Maicon",
  "Mairo",
  "Malaquias",
  "Manoel",
  "Manoelino",
  "Manuel",
  "Marcel",
  "Marcello",
  "Marcelo",
  "Marcilio",
  "Marcinei",
  "Marcio",
  "Marco",
  "Marcos",
  "Marcus",
  "Mardson",
  "Marilzo",
  "Marinaldo",
  "Marinho",
  "Marino",
  "Mario",
  "Markinson",
  "Marlon",
  "Maron",
  "Marquecilio",
  "Martim",
  "Mateus",
  "Matheus",
  "Mathias",
  "Matias",
  "Matthew",
  "Mauri",
  "Mauricio",
  "Maurilio",
  "Mauro",
  "Maury",
  "Maximiliano",
  "Maxsuel",
  "Maxwel",
  "Melquesedec",
  "Melquizedeque",
  "Messias",
  "Michael",
  "Michel",
  "Miguel",
  "Milton",
  "Miraldo",
  "Mirio",
  "Moacir",
  "Moarmedi",
  "Moises",
  "Mozart",
  "Mucio",
  "Muhieddine",
  "Muller",
  "Murilo",
  "Nardoval",
  "Natalino",
  "Natan",
  "Nathan",
  "Nathanael",
  "Nativo",
  "Neberson",
  "Neemias",
  "Neilton",
  "Neimar",
  "Neivo",
  "Nelson",
  "Nelton",
  "Nestor",
  "Neuber",
  "Newton",
  "Nicolas",
  "Nikolas",
  "Nikson",
  "Nilson",
  "Niltom",
  "Nilton",
  "Nisio",
  "Nivaldo",
  "Norberto",
  "Nunnes",
  "Oberdan",
  "Octacilio",
  "Octavio",
  "Odair",
  "Odilon",
  "Odirlei",
  "Olimpio",
  "Oliveiro",
  "Olivio",
  "Olney",
  "Olympio",
  "Onofre",
  "Orcino",
  "Orlando",
  "Oscalino",
  "Oscar",
  "Oseias",
  "Osman",
  "Osmar",
  "Osmundo",
  "Osorio",
  "Osvaldo",
  "Oswaldino",
  "Oswaldo",
  "Otacilio",
  "Otavio",
  "Otino",
  "Ozair",
  "Ozeias",
  "Ozires",
  "Pablo",
  "Paolo",
  "Pascal",
  "Patrick",
  "Paulino",
  "Paulo",
  "Pedro",
  "Pergentino",
  "Peter",
  "Peterson",
  "Petronio",
  "Petrus",
  "Philipe",
  "Philippe",
  "Phillip",
  "Piero",
  "Pierre",
  "Plauto",
  "Ponai",
  "Porfirio",
  "Quintilho",
  "Rafael",
  "Rafhael",
  "Raimundo",
  "Rainer",
  "Ralph",
  "Ramiro",
  "Ramon",
  "Rander",
  "Raoni",
  "Raony",
  "Raphael",
  "Rarisson",
  "Rauel",
  "Rayllander",
  "Raymundo",
  "Reginaldo",
  "Reinaldo",
  "Renan",
  "Renato",
  "Rhewllem",
  "Ricardo",
  "Richard",
  "Riminni",
  "Rinaldo",
  "Rivaldo",
  "Robert",
  "Roberto",
  "Robinson",
  "Robson",
  "Rodison",
  "Rodolfo",
  "Rodrigo",
  "Rodson",
  "Rogelio",
  "Roger",
  "Rogerio",
  "Romario",
  "Romero",
  "Romildo",
  "Romualdo",
  "Romulo",
  "Ronald",
  "Ronaldo",
  "Ronan",
  "Ronei",
  "Ronie",
  "Ronielton",
  "Ronildo",
  "Ronilson",
  "Ronimar",
  "Ronir",
  "Ronivaldo",
  "Ronnie",
  "Roque",
  "Rosania",
  "Rosimar",
  "Rovanne",
  "Rubem",
  "Rubens",
  "Rudolf",
  "Rudwarner",
  "Ruidie",
  "Sally",
  "Salomao",
  "Salvador",
  "Samir",
  "Samuel",
  "Sanabio",
  "Sanderson",
  "Sandoval",
  "Sandro",
  "Santiago",
  "Saulo",
  "Savio",
  "Saymon",
  "Sebastiao",
  "Sergio",
  "Shalon",
  "Sherman",
  "Shyrley",
  "Siclay",
  "Sidmar",
  "Sidnei",
  "Sidnesio",
  "Sidney",
  "Sidon",
  "Silas",
  "Sillas",
  "Silvanir",
  "Silvano",
  "Silvio",
  "Simao",
  "Simeao",
  "Simonton",
  "Sinval",
  "Sirio",
  "Sirlando",
  "Soteronino",
  "Stanley",
  "Stelio",
  "Stenio",
  "Stephen",
  "Tadashi",
  "Tadeu",
  "Tales",
  "Talisson",
  "Talles",
  "Tancredo",
  "Tarcisio",
  "Telmar",
  "Telmo",
  "Tener",
  "Teodoro",
  "Thales",
  "Thalisson",
  "Thalles",
  "Thassio",
  "Theophilo",
  "Thiago",
  "Thierry",
  "Thomas",
  "Thulio",
  "Tiago",
  "Timotheo",
  "Toshio",
  "Tristao",
  "Tulio",
  "Tullio",
  "Turibio",
  "Ubaldino",
  "Ubiara",
  "Ueliton",
  "Uerdem",
  "Uerton",
  "Uesler",
  "Ueverton",
  "Ulisses",
  "Uoston",
  "Uriel",
  "Vagner",
  "Valber",
  "Valcir",
  "Valdeci",
  "Valdeir",
  "Valdemar",
  "Valdemir",
  "Valdeon",
  "Valdete",
  "Valdiney",
  "Valdir",
  "Valdivino",
  "Valmi",
  "Valmir",
  "Valter",
  "Vander",
  "Vanderlei",
  "Vanderlucio",
  "Vanir",
  "Vantuir",
  "Venancio",
  "Venisio",
  "Venuto",
  "Verissimo",
  "Verleydson",
  "Vicente",
  "Victor",
  "Vilmar",
  "Vinicio",
  "Vinicios",
  "Vinicius",
  "Virgilio",
  "Vitalino",
  "Vitor",
  "Vladimi",
  "Vladimir",
  "Wagner",
  "Waldemar",
  "Waldemiro",
  "Waldete",
  "Waldir",
  "Waleson",
  "Walison",
  "Walisson",
  "Walkirio",
  "Wallace",
  "Wallis",
  "Wallison",
  "Wallisson",
  "Wallyson",
  "Wallysson",
  "Walmir",
  "Waltair",
  "Walter",
  "Wander",
  "Wanderlei",
  "Wanderley",
  "Wanderlir",
  "Wanderly",
  "Wanderson",
  "Warlei",
  "Warlem",
  "Warley",
  "Washington",
  "Wasley",
  "Weberson",
  "Wederson",
  "Welbert",
  "Welberte",
  "Welerson",
  "Welington",
  "Wellerson",
  "Wellington",
  "Welliton",
  "Welton",
  "Wemerson",
  "Wendel",
  "Wendell",
  "Wendison",
  "Wendson",
  "Wescley",
  "Weslei",
  "Weslen",
  "Wesley",
  "Weslley",
  "Weverson",
  "Weverton",
  "Wheler",
  "Whodson",
];
const NOMES_FEMININOS = [
  "Abigail",
  "Adalgisa",
  "Adalia",
  "Adaltona",
  "Adelia",
  "Aderlani",
  "Adervalda",
  "Adila",
  "Adriana",
  "Adriane",
  "Adriana",
  "Advania",
  "Amália",
  "Agata",
  "Agatha",
  "Agnes",
  "Airton",
  "Akimi",
  "Alaide",
  "Alaides",
  "Alana",
  "Alanna",
  "Alciene",
  "Alcimara",
  "Alcione",
  "Alessandra",
  "Alexander",
  "Alexandra",
  "Alexandre",
  "Alexia",
  "Alfreda",
  "Alice",
  "Alicia",
  "Aline",
  "Alizete",
  "Almeri",
  "Almerinda",
  "Altemires",
  "Alvanita",
  "Alvina",
  "Alzemar",
  "Alzir",
  "Alzira",
  "Amalia",
  "Amanda",
  "Amariles",
  "Analha",
  "Analia",
  "Anamaria",
  "Ananda",
  "Anastaciana",
  "Anderson",
  "Andre",
  "Andrea",
  "Andreia",
  "Andressa",
  "Andreza",
  "Andrieli",
  "Andrielly",
  "Anelise",
  "Anezia",
  "Angela",
  "Angelica",
  "Angelina",
  "Angelita",
  "Anisia",
  "Antonia",
  "Antonieta",
  "Antoninha",
  "Antonia",
  "Aparecida",
  "Appia",
  "Aracy",
  "Argentina",
  "Ariana",
  "Ariane",
  "Arlecy",
  "Arlete",
  "Arlinda",
  "Arthur",
  "Atiane",
  "Augusta",
  "Aurea",
  "Aurelina",
  "Auxiliadora",
  "Balbina",
  "Baltazar",
  "Barbara",
  "Beatriz",
  "Benedicta",
  "Benedita",
  "Benigna",
  "Berenice",
  "Bernadete",
  "Bernarda",
  "Bertolina",
  "Betania",
  "Bianca",
  "Blenda",
  "Brenda",
  "Bruna",
  "Brunnea",
  "Bruna",
  "Camila",
  "Carina",
  "Carla",
  "Carlos",
  "Carmelina",
  "Carmelita",
  "Carmen",
  "Carolina",
  "Caroline",
  "Cassia",
  "Castorina",
  "Catarina",
  "Cecilia",
  "Celeste",
  "Celiamar",
  "Celine",
  "Celme",
  "Celsa",
  "Ceres",
  "Ceria",
  "Cesar",
  "Cezar",
  "Chaiene",
  "Charles",
  "Cheila",
  "Cibele",
  "Cibelina",
  "Cicera",
  "Cicera",
  "Cinara",
  "Cinira",
  "Cinthia",
  "Cintia",
  "Cirley",
  "Claire",
  "Clarice",
  "Claudete",
  "Claudette",
  "Claudia",
  "Claudilene",
  "Claudineia",
  "Claudia",
  "Claudionora",
  "Clauzi",
  "Cleide",
  "Cleidiane",
  "Cleidy",
  "Clelia",
  "Cleonice",
  "Cleria",
  "Cleunita",
  "Cleusa",
  "Cleuza",
  "Cloris",
  "Conceicaa",
  "Consolacaa",
  "Consuela",
  "Corina",
  "Creusa",
  "Creuza",
  "Cricia",
  "Crisley",
  "Cristhiane",
  "Cristiana",
  "Cristiane",
  "Cristianne",
  "Cristiana",
  "Cristina",
  "Crystiane",
  "Custodia",
  "Daciana",
  "Daiane",
  "Daisa",
  "Dalila",
  "Dalma",
  "Dalton",
  "Dalva",
  "Damaris",
  "Daniel",
  "Daniela",
  "Daniele",
  "Daniella",
  "Danielle",
  "Danielli",
  "Danila",
  "Danisia",
  "Darcilia",
  "Daria",
  "Daurea",
  "Dayana",
  "Dayane",
  "Dayse",
  "Debora",
  "Deborah",
  "Decia",
  "Deisimara",
  "Deize",
  "Delfina",
  "Delia",
  "Denilda",
  "Denise",
  "Denisson",
  "Denizi",
  "Desiree",
  "Dhara",
  "Diana",
  "Diega",
  "Diene",
  "Dilce",
  "Dilza",
  "Diolener",
  "Dirce",
  "Djanane",
  "Dolice",
  "Dolores",
  "Domingas",
  "Doradina",
  "Doris",
  "Dormalina",
  "Douglas",
  "Drielly",
  "Dulce",
  "Durce",
  "Durcelina",
  "Edeivane",
  "Edesia",
  "Ediceia",
  "Edilane",
  "Edileia",
  "Edilene",
  "Edileusa",
  "Edilson",
  "Edimar",
  "Edina",
  "Edivanilda",
  "Edmar",
  "Edmea",
  "Edmilson",
  "Ednamar",
  "Edneia",
  "Ednelson",
  "Edson",
  "Eduarda",
  "Eduarda",
  "Edvete",
  "Efigenia",
  "Elaine",
  "Elandra",
  "Elane",
  "Elanir",
  "Elcilene",
  "Elcia",
  "Elcione",
  "Elenice",
  "Eleonor",
  "Eleuza",
  "Eliana",
  "Eliane",
  "Elidete",
  "Elidia",
  "Eliene",
  "Elieth",
  "Eliezer",
  "Elina",
  "Elisa",
  "Elisabete",
  "Elisangela",
  "Elisete",
  "Elizabete",
  "Elizabeth",
  "Elizangela",
  "Elizete",
  "Ellen",
  "Ellian",
  "Eloisa",
  "Eloneida",
  "Elvina",
  "Elvira",
  "Elziana",
  "Emanoela",
  "Emanuelle",
  "Emilia",
  "Emily",
  "Emmanuelle",
  "Enedir",
  "Enilda",
  "Erdilaine",
  "Erenita",
  "Erica",
  "Erica",
  "Erika",
  "Erinalva",
  "Erita",
  "Erithusa",
  "Erlia",
  "Ermita",
  "Erosmari",
  "Esmeraldas",
  "Estefanie",
  "Estela",
  "Ester",
  "Eugenia",
  "Eunice",
  "Euridia",
  "Eustaquia",
  "Evangelina",
  "Expedita",
  "Ezequiele",
  "Fabiana",
  "Fabiane",
  "Fabiola",
  "Fabricia",
  "Fabricia",
  "Faraildes",
  "Fatima",
  "Felipe",
  "Fernanda",
  "Fernanda",
  "Filipe",
  "Filomena",
  "Flavia",
  "Flaviane",
  "Flavia",
  "Flores",
  "Florinda",
  "Franci",
  "Franciane",
  "Franciele",
  "Francielle",
  "Francine",
  "Francisca",
  "Francisca",
  "Francislene",
  "Frederica",
  "Fulvia",
  "Gabriel",
  "Gabriela",
  "Gabriele",
  "Gabrieli",
  "Gabriella",
  "Gabrielle",
  "Gabrielli",
  "Galdina",
  "Gasparina",
  "Geisa",
  "Geise",
  "Geiza",
  "Geniclea",
  "Genuina",
  "Georgia",
  "Geovania",
  "Geovanna",
  "Geralda",
  "Geralda",
  "Gerolisa",
  "Gersi",
  "Gersina",
  "Gertrudes",
  "Geruzza",
  "Gerviana",
  "Gessica",
  "Giani",
  "Giannini",
  "Gilda",
  "Gilliane",
  "Gilma",
  "Gilsara",
  "Gilson",
  "Giovana",
  "Giovane",
  "Giovani",
  "Gisela",
  "Gisele",
  "Giselia",
  "Gislene",
  "Giuliana",
  "Gizelle",
  "Glaucia",
  "Gleice",
  "Gleiciane",
  "Gleizielle",
  "Gloria",
  "Graciela",
  "Graciele",
  "Gracielle",
  "Grasielle",
  "Graziela",
  "Graziele",
  "Grazielle",
  "Guilherme",
  "Guilhermina",
  "Gustava",
  "Hanna",
  "Harolda",
  "Haydee",
  "Hayssa",
  "Hebert",
  "Helaine",
  "Helen",
  "Helena",
  "Helida",
  "Hellen",
  "Helliana",
  "Heloirta",
  "Heloisa",
  "Heloiza",
  "Helton",
  "Herica",
  "Hiaga",
  "Hideralda",
  "Hilda",
  "Hodilia",
  "Hortencia",
  "Hosana",
  "Hulia",
  "Ildedi",
  "Ildete",
  "Ilena",
  "Ileni",
  "Iliana",
  "Inacia",
  "Inara",
  "Ingreth",
  "Ingrid",
  "Iolanda",
  "Iraci",
  "Iracy",
  "Irani",
  "Iranir",
  "Irene",
  "Isabel",
  "Isabela",
  "Isabella",
  "Isabelle",
  "Isadora",
  "Isaltina",
  "Isnalda",
  "Itala",
  "Ivanete",
  "Ivani",
  "Ivanicy",
  "Ivanilde",
  "Ivete",
  "Ivone",
  "Izabel",
  "Izabela",
  "Izaura",
  "Izolina",
  "Jaceline",
  "Jacqueline",
  "Jacquilene",
  "Jacyr",
  "Jaderlina",
  "Jadson",
  "Jaira",
  "Jakeline",
  "Janael",
  "Janaina",
  "Jandira",
  "Janete",
  "Janiele",
  "Jaqueline",
  "Jasmine",
  "Jayne",
  "Jeane",
  "Jenifer",
  "Jennifer",
  "Jessica",
  "Jessika",
  "Jessyca",
  "Jesus",
  "Jeziel",
  "Jhenefer",
  "Jhuliene",
  "Joana",
  "Joanne",
  "Joaquim",
  "Jocelia",
  "Joeliza",
  "Joelma",
  "Joeva",
  "Joice",
  "Jonas",
  "Jonathan",
  "Jordana",
  "Jordane",
  "Jordelina",
  "Jorge",
  "Josana",
  "Joseane",
  "Josefa",
  "Josefina",
  "Josemary",
  "Josiane",
  "Josiete",
  "Josilene",
  "Joyce",
  "Joycimara",
  "Jucilea",
  "Julia",
  "Juliana",
  "Juliane",
  "Julie",
  "Juliene",
  "Julieta",
  "Julia",
  "Junia",
  "Juraci",
  "Jussara",
  "Karen",
  "Karenn",
  "Karila",
  "Karina",
  "Karla",
  "Karolina",
  "Karoline",
  "Karyne",
  "Katia",
  "Kauana",
  "Keidina",
  "Keila",
  "Keley",
  "Kelly",
  "Kenia",
  "Kesia",
  "Kessia",
  "Ketuli",
  "Kiara",
  "Laila",
  "Laira",
  "Larissa",
  "Laryssa",
  "Laura",
  "Laurides",
  "Laurimar",
  "Laurinda",
  "Laurita",
  "Layana",
  "Lazara",
  "Leandra",
  "Leandra",
  "Leidiane",
  "Leidinalva",
  "Leila",
  "Leiva",
  "Lenice",
  "Leodania",
  "Leonarda",
  "Leonelina",
  "Leonor",
  "Leticia",
  "Liberata",
  "Lidia",
  "Lidiana",
  "Lidiane",
  "Lidihanna",
  "Liege",
  "Ligia",
  "Lilavate",
  "Lilia",
  "Lilian",
  "Liliana",
  "Liliane",
  "Linda",
  "Lindaura",
  "Lindolores",
  "Lineia",
  "Liney",
  "Livia",
  "Lizete",
  "Loianne",
  "Loren",
  "Lorena",
  "Loreny",
  "Lorraine",
  "Lorrana",
  "Lorrayne",
  "Lorraynne",
  "Loslaine",
  "Louise",
  "Louiselen",
  "Lourdes",
  "Lourenca",
  "Luana",
  "Lucas",
  "Lucelia",
  "Lucia",
  "Luciana",
  "Luciane",
  "Luciene",
  "Lucileia",
  "Lucilene",
  "Lucilia",
  "Lucimar",
  "Lucimara",
  "Lucineia",
  "Lucinelia",
  "Lucrecia",
  "Ludimila",
  "Ludineia",
  "Ludmila",
  "Luisa",
  "Luiza",
  "Lusmar",
  "Luzia",
  "Luzimar",
  "Lygia",
  "Madalena",
  "Magda",
  "Magdalena",
  "Magnolia",
  "Maira",
  "Manoel",
  "Manoela",
  "Manoelita",
  "Manuela",
  "Manuella",
  "Marcela",
  "Marcele",
  "Marcelina",
  "Marcella",
  "Marcelle",
  "Marcela",
  "Marcia",
  "Marciele",
  "Marcia",
  "Marca",
  "Marcos",
  "Marcia",
  "Margarete",
  "Margareth",
  "Margarett",
  "Margarida",
  "Maria",
  "Mariana",
  "Mariane",
  "Marianna",
  "Maridelle",
  "Marieli",
  "Marielle",
  "Marilda",
  "Marileia",
  "Marilene",
  "Marilha",
  "Marilia",
  "Marilu",
  "Marilucy",
  "Mariluz",
  "Marilza",
  "Marina",
  "Marinalva",
  "Marinda",
  "Marinea",
  "Marineuza",
  "Maris",
  "Marisa",
  "Maristela",
  "Maristella",
  "Mariza",
  "Marize",
  "Marizete",
  "Marleia",
  "Marlene",
  "Marli",
  "Marlise",
  "Marly",
  "Marta",
  "Martha",
  "Maryelle",
  "Matheus",
  "Matildes",
  "Maura",
  "Mauricia",
  "Maurina",
  "Maurita",
  "Mayara",
  "Maysa",
  "Megan",
  "Meiriele",
  "Melania",
  "Melissa",
  "Mercedes",
  "Merces",
  "Mercia",
  "Michel",
  "Michele",
  "Michelle",
  "Miguel",
  "Milena",
  "Millene",
  "Milton",
  "Milva",
  "Mirelle",
  "Miria",
  "Miriam",
  "Mirian",
  "Mirna",
  "Mirtes",
  "Moacir",
  "Moema",
  "Monalisa",
  "Monica",
  "Monique",
  "Myneia",
  "Myriam",
  "Nadia",
  "Nadir",
  "Nadirley",
  "Naiara",
  "Naira",
  "Natali",
  "Natalia",
  "Natalice",
  "Nathalia",
  "Nayara",
  "Nayessa",
  "Nayhara",
  "Nayra",
  "Nayse",
  "Neide",
  "Neidemar",
  "Nelci",
  "Nelcy",
  "Nelimar",
  "Nelia",
  "Nelly",
  "Nelson",
  "Nerian",
  "Neurentina",
  "Neusa",
  "Neuza",
  "Newton",
  "Nicole",
  "Nilcea",
  "Nilcelane",
  "Nilda",
  "Nilma",
  "Nilsa",
  "Nilson",
  "Nilza",
  "Nivia",
  "Niwton",
  "Noemi",
  "Noemia",
  "Norma",
  "Nubia",
  "Odete",
  "Odilia",
  "Ohanna",
  "Olimpia",
  "Olinda",
  "Oliria",
  "Olivia",
  "Olmezinda",
  "Oneida",
  "Onofra",
  "Osmar",
  "Osmira",
  "Otilia",
  "Palmira",
  "Paloma",
  "Pamela",
  "Pamella",
  "Paola",
  "Patricia",
  "Patrocina",
  "Patrocinia",
  "Patryck",
  "Paula",
  "Paulina",
  "Paula",
  "Pedrina",
  "Pedra",
  "Penha",
  "Petala",
  "Piedade",
  "Poliana",
  "Poliane",
  "Pollyanna",
  "Priscila",
  "Priscylla",
  "Quiteria",
  "Rachel",
  "Rafael",
  "Rafaela",
  "Rafaella",
  "Raiane",
  "Raimunda",
  "Raissa",
  "Ramon",
  "Raphael",
  "Raphaela",
  "Raquel",
  "Ravena",
  "Rayane",
  "Rayanne",
  "Raysse",
  "Rayza",
  "Realina",
  "Rebeca",
  "Regiane",
  "Regilda",
  "Regina",
  "Reginalda",
  "Reginalda",
  "Reili",
  "Rejane",
  "Renaria",
  "Renata",
  "Renata",
  "Rener",
  "Renilda",
  "Ricarda",
  "Rinalda",
  "Riqueli",
  "Rizoleta",
  "Robert",
  "Roberta",
  "Roberta",
  "Rodriga",
  "Rogenea",
  "Rogeria",
  "Romildes",
  "Romula",
  "Ronalda",
  "Rosaine",
  "Rosalia",
  "Rosalina",
  "Rosalinda",
  "Rosana",
  "Rosangela",
  "Rosemary",
  "Rosemeire",
  "Rosemery",
  "Rosenita",
  "Roseny",
  "Rosiane",
  "Rosilda",
  "Rosileia",
  "Rosilene",
  "Rosiliana",
  "Rosimeire",
  "Rosimery",
  "Rosineia",
  "Rosinete",
  "Rossi",
  "Rozeli",
  "Rozilane",
  "Rozimaria",
  "Rozimeire",
  "Rubens",
  "Rubia",
  "Sabrina",
  "Salvia",
  "Samanta",
  "Samantha",
  "Samara",
  "Samuel",
  "Sandra",
  "Sandralene",
  "Sanges",
  "Santa",
  "Santa",
  "Sarah",
  "Sayuri",
  "Sebastiana",
  "Sebastiaa",
  "Selia",
  "Selma",
  "Sergia",
  "Shirlei",
  "Shirley",
  "Sibele",
  "Sibila",
  "Sieila",
  "Silene",
  "Silma",
  "Silmar",
  "Silmara",
  "Silvana",
  "Silvaneide",
  "Silvani",
  "Silvania",
  "Silvia",
  "Simone",
  "Simony",
  "Sirlane",
  "Sirlene",
  "Sizenanda",
  "Solange",
  "Sonia",
  "Soraia",
  "Soraya",
  "Stephanie",
  "Sthefani",
  "Suelem",
  "Suelen",
  "Suelene",
  "Sueli",
  "Suellen",
  "Suely",
  "Sulima",
  "Suzana",
  "Tabata",
  "Tahbatha",
  "Tainara",
  "Taissa",
  "Taiza",
  "Talita",
  "Tamara",
  "Tamires",
  "Tamiris",
  "Tamirys",
  "Tania",
  "Tarcila",
  "Tatiana",
  "Tatiane",
  "Tatiani",
  "Telma",
  "Teonila",
  "Teresa",
  "Tereza",
  "Terezinha",
  "Terezita",
  "Thaiane",
  "Thainah",
  "Thais",
  "Thaise",
  "Thalita",
  "Thalyssa",
  "Thalyta",
  "Thamires",
  "Thamiris",
  "Thatiane",
  "Thayene",
  "Thayna",
  "Thays",
  "Theresinha",
  "Therezinha",
  "Thiaga",
  "Tiaga",
  "Ticiane",
  "Titane",
  "Tyssa",
  "Umbelina",
  "Vagna",
  "Valdete",
  "Valdilucia",
  "Valdinei",
  "Valdineia",
  "Valdirene",
  "Valentina",
  "Valeria",
  "Valquiria",
  "Vanda",
  "Vanderlea",
  "Vanderleia",
  "Vanessa",
  "Vania",
  "Vanilda",
  "Vanja",
  "Vanusa",
  "Vanuza",
  "Varlene",
  "Venilton",
  "Veramar",
  "Veronica",
  "Veronice",
  "Vicente",
  "Vicentina",
  "Victor",
  "Victoria",
  "Vilarina",
  "Vilcleia",
  "Vilma",
  "Vinicius",
  "Violeta",
  "Virginia",
  "Vitalina",
  "Vitor",
  "Vitoria",
  "Viviana",
  "Viviane",
  "Viviani",
  "Viviann",
  "Wagner",
  "Waldemunda",
  "Walderez",
  "Waleria",
  "Walesca",
  "Waleska",
  "Walmenia",
  "Walquiria",
  "Walter",
  "Wanisleia",
  "Warlei",
  "Washington",
];

const SOBRENOMES = [
  "Abrantes",
  "Abrao",
  "Abreu",
  "Accordi",
  "Affeldt",
  "Agostinho",
  "Aguiar",
  "Aguilar",
  "Aikin",
  "Aires",
  "Albuquerque",
  "Alcantara",
  "Aleixo",
  "Alencastro",
  "Alexandre",
  "Alexandria",
  "Alles",
  "Almeida",
  "Almida",
  "Alvarenga",
  "Alves",
  "Alvim",
  "Alvisi",
  "Alvoredo",
  "Amancio",
  "Amaral",
  "Amarante",
  "Amaro",
  "Ambrosio",
  "Amico",
  "Amorim",
  "Ananias",
  "Anchieta",
  "Andrade",
  "Angelo",
  "Angheben",
  "Angiesky",
  "Anizio",
  "Anjos",
  "Anschau",
  "Ansollin",
  "Antonio",
  "Antos",
  "Antunes",
  "Anunciacao",
  "Anunciada",
  "Aparecida",
  "Aquino",
  "Aragao",
  "Aranha",
  "Arantes",
  "Araquam",
  "Araujo",
  "Arceno",
  "Ardisson",
  "Argenta",
  "Arias",
  "Arruda",
  "Assis",
  "Augusto",
  "Avelar",
  "Avelino",
  "Aversa",
  "Avila",
  "Azeredo",
  "Azevedo",
  "Babinski",
  "Bacelar",
  "Backes",
  "Baggio",
  "Bagnaia",
  "Bahia",
  "Baioto",
  "Balbino",
  "Baltazar",
  "Bandeira",
  "Baptista",
  "Barbery",
  "Barbosa",
  "Barcelos",
  "Barreto",
  "Barrofarde",
  "Barros",
  "Barroso",
  "Bartz",
  "Basalia",
  "Bassanes",
  "Bassi",
  "Bastos",
  "Batista",
  "Bauer",
  "Bazzanella",
  "Bazzi",
  "Becker",
  "Bello",
  "Bendinelli",
  "Benedet",
  "Benedita",
  "Benevenuto",
  "Benjamin",
  "Bennemann",
  "Bento",
  "Benvindo",
  "Beraldo",
  "Berbardes",
  "Berezowski",
  "Bernardino",
  "Bernardo",
  "Berndt",
  "Berres",
  "Berteli",
  "Bertoldi",
  "Bertussi",
  "Besen",
  "Beserra",
  "Betoni",
  "Bezerra",
  "Bezerro",
  "Bianchi",
  "Bispo",
  "Bitencourt",
  "Boachuca",
  "Boeno",
  "Boettger",
  "Bohrer",
  "Bolzan",
  "Bonifacio",
  "Borba",
  "Bordim",
  "Borges",
  "Bortolotto",
  "Boscatti",
  "Bosyi",
  "Bozzano",
  "Braga",
  "Braganca",
  "Bragioni",
  "Branco",
  "Brandao",
  "Brant",
  "Brasil",
  "Braul",
  "Brehm",
  "Bristot",
  "Brito",
  "Bronzoli",
  "Bruxel",
  "Bueno",
  "Bukovski",
  "Bungenstab",
  "Buono",
  "Busko",
  "Cabral",
  "Cadete",
  "Caetano",
  "Caitano",
  "Caixeta",
  "Caldas",
  "Calera",
  "Calixtro",
  "Calmon",
  "Calvo",
  "Camara",
  "Camargo",
  "Camelo",
  "Camilo",
  "Campos",
  "Candida",
  "Candido",
  "Canhadas",
  "Caniato",
  "Cantarelli",
  "Cantoni",
  "Capristano",
  "Caproni",
  "Cardoso",
  "Carence",
  "Carlos",
  "Carmo",
  "Carneiro",
  "Carreiro",
  "Carretero",
  "Cartaxo",
  "Carvalho",
  "Casarin",
  "Caseira",
  "Casemiro",
  "Casimiro",
  "Castagnara",
  "Castagnotto",
  "Castanho",
  "Castelani",
  "Castilho",
  "Castro",
  "Catarino",
  "Cathaneo",
  "Catharino",
  "Cavalcante",
  "Cavalcanti",
  "Cavalheiro",
  "Cavalli",
  "Celestino",
  "Cerqueira",
  "Cersosimo",
  "Cesario",
  "Cezario",
  "Chagas",
  "Charif",
  "Chaves",
  "Chico",
  "Chimello",
  "Chioroglo",
  "Choma",
  "Christo",
  "Christofoli",
  "Cintra",
  "Cisqueira",
  "Claro",
  "Clemente",
  "Coelho",
  "Colodette",
  "Comin",
  "Comper",
  "Conceicao",
  "Constantino",
  "Conte",
  "Coracini",
  "Cordeiro",
  "Cordova",
  "Corona",
  "Corral",
  "Correa",
  "Correia",
  "Correra",
  "Cossa",
  "Costa",
  "Costoide",
  "Coutinho",
  "Couto",
  "Crepalde",
  "Cristo",
  "Crozoletto",
  "Cunha",
  "Curtio",
  "Custodia",
  "Custodio",
  "Cutrim",
  "Czarnescki",
  "Dafre",
  "Dagagny",
  "Dalben",
  "Dalmaso",
  "Damasceno",
  "Damasio",
  "Dambros",
  "Daniel",
  "Danielski",
  "Dantas",
  "David",
  "Defelippe",
  "Delgado",
  "Dellabela",
  "Delmiro",
  "Deluca",
  "Dembicki",
  "Demeneck",
  "Demetrio",
  "Demuth",
  "Deoracki",
  "Destefano",
  "Dezan",
  "Dietrich",
  "Dimitrouvi",
  "Diniz",
  "Diola",
  "Divino",
  "Domingos",
  "Domingues",
  "Dominguez",
  "Dominick",
  "Dores",
  "Dorneles",
  "Dornelles",
  "Dorner",
  "Dorta",
  "Dourado",
  "Dresseno",
  "Duarte",
  "Duque",
  "Duraes",
  "Dutra",
  "Egidio",
  "Einik",
  "Elias",
  "Eliza",
  "Emanoelli",
  "Emmerich",
  "Enderle",
  "Endrigo",
  "Engel",
  "Epifanio",
  "Espindola",
  "Espinola",
  "Estano",
  "Estevao",
  "Eugenio",
  "Euzebio",
  "Evangelista",
  "Everton",
  "Fabiano",
  "Fabri",
  "Facchi",
  "Fagundes",
  "Falcao",
  "Faleiro",
  "Fantoni",
  "Farah",
  "Faria",
  "Farias",
  "Faroni",
  "Fatima",
  "Faustino",
  "Favaretto",
  "Faveri",
  "Faxini",
  "Feijao",
  "Feitosa",
  "Feitoza",
  "Felber",
  "Felinto",
  "Felipe",
  "Felisbino",
  "Felix",
  "Ferens",
  "Fernandes",
  "Ferrarezi",
  "Ferrari",
  "Ferraro",
  "Ferraz",
  "Ferreira",
  "Ferro",
  "Ffarias",
  "Fichmann",
  "Figueiredo",
  "Figurski",
  "Filha",
  "Filho",
  "Filipini",
  "Fiorentin",
  "Firmino",
  "Firmo",
  "Fiume",
  "Fiuza",
  "Flavio",
  "Fleck",
  "Florinda",
  "Fogaca",
  "Fonseca",
  "Fontana",
  "Fontenele",
  "Fontes",
  "Fracaro",
  "Fraga",
  "Franca",
  "Francelino",
  "Francisco",
  "Franco",
  "Franzin",
  "Freire",
  "Freitas",
  "Freras",
  "Froehlich",
  "Fronholz",
  "Frozza",
  "Fulber",
  "Furini",
  "Furlanetto",
  "Furst",
  "Furtado",
  "Gabirobertz",
  "Gabriel",
  "Gaedke",
  "Galindo",
  "Galvao",
  "Ganan",
  "Gandra",
  "Garcia",
  "Gargaro",
  "Gaspar",
  "Gaudencio",
  "Gelain",
  "Generoso",
  "Genuina",
  "Genuino",
  "Geraldo",
  "Geremias",
  "Geronimo",
  "Gervasio",
  "Gevegier",
  "Ghisi",
  "Gilabel",
  "Giordan",
  "Giovanella",
  "Gnoatto",
  "Gobbi",
  "Godinho",
  "Godoy",
  "Goedert",
  "Goetz",
  "Golfetto",
  "Gollo",
  "Gomes",
  "Goncalo",
  "Goncalves",
  "Gonelhu",
  "Gonoring",
  "Gontijo",
  "Gonzaga",
  "Gonzalez",
  "Gotardo",
  "Goulart",
  "Gouvea",
  "Gozzo",
  "Gracas",
  "Graciano",
  "Gramatico",
  "Grando",
  "Graneiro",
  "Guarda",
  "Guedes",
  "Gugel",
  "Guimaraes",
  "Gurgel",
  "Gustmann",
  "Gutmann",
  "Hasse",
  "Hawerroth",
  "Hayashi",
  "Henriques",
  "Herrera",
  "Higino",
  "Hijas",
  "Hipolito",
  "Hirata",
  "Hobbel",
  "Holanda",
  "Holek",
  "Horlat",
  "Horst",
  "Horta",
  "Horvath",
  "Hostalacio",
  "Hrehorovicz",
  "Hretsiuk",
  "Huebes",
  "Iasunaga",
  "Ignacio",
  "Ilheo",
  "Ilidio",
  "Imparato",
  "Inacia",
  "Inacio",
  "Irmao",
  "Isidorio",
  "Isquierdo",
  "Iurko",
  "Iwata",
  "Izidorio",
  "Jacinto",
  "Jacob",
  "Jacobs",
  "Jamin",
  "Januario",
  "Jardim",
  "Jesuino",
  "Jesus",
  "Joffre",
  "Jonas",
  "Jorge",
  "Josefino",
  "Juliani",
  "Juliao",
  "Julio",
  "Juncks",
  "Junio",
  "Junior",
  "Junqueira",
  "Justino",
  "Kasteckas",
  "Kawamura",
  "Kernitzkei",
  "Kittel",
  "Klockner",
  "Knabben",
  "Knopf",
  "Koftun",
  "Komechi",
  "Kozovits",
  "Kreimer",
  "Kreyssig",
  "Krzyzanski",
  "Kuabara",
  "Kushima",
  "Lacerda",
  "Lamas",
  "Lameiras",
  "Lanza",
  "Lauer",
  "Laurete",
  "Laurindo",
  "Lazarini",
  "Lazaro",
  "Leandro",
  "Leite",
  "Leitzke",
  "Lembeck",
  "Lemes",
  "Lemmi",
  "Lemos",
  "Lendzion",
  "Lenza",
  "Leopoldino",
  "Leorato",
  "Levai",
  "Lewkowicz",
  "Liber",
  "Liboni",
  "Liborio",
  "Liduino",
  "Limas",
  "Lindema",
  "Linne",
  "Lisboa",
  "Lisner",
  "Littig",
  "Lobato",
  "Locatelli",
  "Longen",
  "Lopes",
  "Lorenzo",
  "Losque",
  "Lourdes",
  "Lourenco",
  "Loures",
  "Louveira",
  "Louzada",
  "Lubacheski",
  "Lucas",
  "Lucena",
  "Luciano",
  "Ludwyg",
  "Lummertz",
  "Lupion",
  "Lyrio",
  "Macedo",
  "Machado",
  "Maciel",
  "Macieski",
  "Madureira",
  "Maffini",
  "Mafra",
  "Magalhaes",
  "Magarino",
  "Magedanz",
  "Magina",
  "Makimoto",
  "Malafaia",
  "Maleski",
  "Malosti",
  "Malta",
  "Mamedes",
  "Manata",
  "Manchineri",
  "Manduca",
  "Manea",
  "Manffioletti",
  "Mangiavacchi",
  "Manoel",
  "Mansi",
  "Manuel",
  "Maraga",
  "Maranhao",
  "Marcelino",
  "Marcellini",
  "Marchesin",
  "Marchetti",
  "Marcolino",
  "Marcondes",
  "Maria",
  "Mariano",
  "Marin",
  "Marinho",
  "Marins",
  "Mariussi",
  "Marques",
  "Martines",
  "Martini",
  "Martino",
  "Martins",
  "Marvila",
  "Maschke",
  "Maske",
  "Massaro",
  "Mateus",
  "Matheus",
  "Matias",
  "Matos",
  "Mattos",
  "Mattoso",
  "Maturana",
  "Mauad",
  "Maueski",
  "Mauricio",
  "Mazetto",
  "Mazur",
  "Mazutti",
  "Mazzucco",
  "Medeiros",
  "Medina",
  "Meireles",
  "Melgaco",
  "Mello",
  "Menas",
  "Mendes",
  "Mendonca",
  "Menegatte",
  "Menegazzo",
  "Meneses",
  "Menezes",
  "Menuzzi",
  "Meroto",
  "Mertz",
  "Mesquita",
  "Mikulik",
  "Milani",
  "Milbratz",
  "Milhorato",
  "Militao",
  "Mingues",
  "Miranda",
  "Mitrut",
  "Mittelstaedt",
  "Mitter",
  "Monegat",
  "Monguilhott",
  "Monte",
  "Monteiro",
  "Moraes",
  "Morais",
  "Morato",
  "Moreira",
  "Moreno",
  "Morosin",
  "Motta",
  "Moura",
  "Mozzer",
  "Muczinski",
  "Munhos",
  "Muniz",
  "Murano",
  "Muruce",
  "Nandolff",
  "Nascimento",
  "Natter",
  "Negreiros",
  "Negrelli",
  "Negrini",
  "Neill",
  "Nepomuceno",
  "Neres",
  "Nesello",
  "Neves",
  "Nogueira",
  "Nolli",
  "Noriler",
  "Nornberg",
  "Nosima",
  "Novaes",
  "Novais",
  "Nunes",
  "Oenning",
  "Offenstein",
  "Oliveira",
  "Orfao",
  "Orlandini",
  "Osorio",
  "Ouchana",
  "Ouriques",
  "Pacatuba",
  "Pacheco",
  "Packowski",
  "Padilha",
  "Paganini",
  "Pagliaminuto",
  "Pagnoncelli",
  "Pagung",
  "Paiva",
  "Paixao",
  "Palheta",
  "Palma",
  "Palmeira",
  "Pantaleao",
  "Pantoja",
  "Passos",
  "Pastura",
  "Paterno",
  "Patricio",
  "Patrocinio",
  "Paula",
  "Paulino",
  "Paulo",
  "Pauloski",
  "Pazetto",
  "Pecanha",
  "Pedra",
  "Pedro",
  "Pedrosa",
  "Pedrotti",
  "Pegado",
  "Peixoto",
  "Pelens",
  "Pelissari",
  "Pelizzaro",
  "Penha",
  "Perche",
  "Pereira",
  "Peres",
  "Peret",
  "Pereta",
  "Peretto",
  "Perez",
  "Perillo",
  "Perin",
  "Perondi",
  "Perri",
  "Pessoa",
  "Petkowicz",
  "Petrovski",
  "Pezente",
  "Picolotto",
  "Piedade",
  "Pietrobom",
  "Pilatti",
  "Pillati",
  "Pimenta",
  "Pimentel",
  "Pinheiro",
  "Pinto",
  "Piovesan",
  "Pires",
  "Pistoia",
  "Pivotto",
  "Pixinin",
  "Plizzari",
  "Policarpo",
  "Ponte",
  "Pontes",
  "Porto",
  "Pottker",
  "Potulski",
  "Povoa",
  "Povoas",
  "Prado",
  "Praeira",
  "Prata",
  "Prates",
  "Prazeres",
  "Prediger",
  "Prenh",
  "Prestes",
  "Preuss",
  "Prigoli",
  "Printes",
  "Procopio",
  "Proenca",
  "Pruchniesky",
  "Prudencini",
  "Puchetti",
  "Pundrich",
  "Quadros",
  "Queiroz",
  "Quevedo",
  "Quinta",
  "Quintino",
  "Rabelo",
  "Rachel",
  "Radtke",
  "Radunz",
  "Rafael",
  "Rahmeier",
  "Ramalho",
  "Ramos",
  "Rancati",
  "Rangel",
  "Raspini",
  "Ratts",
  "Raymunda",
  "Raymundo",
  "Razario",
  "Razera",
  "Recco",
  "Refosco",
  "Regis",
  "Renno",
  "Rentz",
  "Resende",
  "Rezende",
  "Ribas",
  "Ribeiro",
  "Richter",
  "Rimes",
  "Risso",
  "Roberto",
  "Rocha",
  "Rocher",
  "Rockenbach",
  "Rocon",
  "Rodrigues",
  "Rohden",
  "Rolim",
  "Romano",
  "Romao",
  "Roque",
  "Roquim",
  "Rosario",
  "Rosas",
  "Rubel",
  "Ruggeri",
  "Rujano",
  "Ruvinski",
  "Saager",
  "Saantos",
  "Sabino",
  "Sacramento",
  "Saegosa",
  "Salazar",
  "Saldanha",
  "Sales",
  "Salgado",
  "Salgueiro",
  "Salles",
  "Salvadego",
  "Salvador",
  "Salvi",
  "Sampaio",
  "Sanches",
  "Sandes",
  "Sanos",
  "Santana",
  "Santiago",
  "Santo",
  "Santos",
  "Saraiva",
  "Sarda",
  "Sardinha",
  "Savassi",
  "Savio",
  "Schalm",
  "Schimelfenig",
  "Schirmer",
  "Schmidke",
  "Schmitt",
  "Schmitz",
  "Schmoller",
  "Schneider",
  "Schotten",
  "Schulmann",
  "Schwambach",
  "Scopel",
  "Scoto",
  "Segala",
  "Seixas",
  "Senko",
  "Serafim",
  "Serafini",
  "Sergio",
  "Serra",
  "Serrao",
  "Sette",
  "Shahid",
  "Shinaider",
  "Shiota",
  "Siedschlag",
  "Silva",
  "Silveira",
  "Silverio",
  "Simas",
  "Simiano",
  "Simoes",
  "Simon",
  "Simoneti",
  "Siqueira",
  "Siring",
  "Soares",
  "Sobczak",
  "Sobreira",
  "Sobrinho",
  "Sodre",
  "Soledade",
  "Soluza",
  "Sonco",
  "Sorbara",
  "Sotero",
  "Sousa",
  "Sousani",
  "Souto",
  "Souza",
  "Spagnol",
  "Stanke",
  "Starling",
  "Stella",
  "Stobbe",
  "Stobienia",
  "Stocker",
  "Storti",
  "Stringari",
  "Suhadolnick",
  "Sulzbacher",
  "Tamazia",
  "Tanoye",
  "Tavares",
  "Teixeira",
  "Teleginski",
  "Telles",
  "Tenorio",
  "Tenoro",
  "Terra",
  "Testa",
  "Tezza",
  "Thereza",
  "Thiesen",
  "Tibes",
  "Tiburcio",
  "Timoteo",
  "Todescatto",
  "Toledo",
  "Tomazeli",
  "Tonatto",
  "Tonello",
  "Tonon",
  "Torales",
  "Torres",
  "Tostes",
  "Tourino",
  "Toyoda",
  "Trancolin",
  "Trento",
  "Trindade",
  "Trova",
  "Turin",
  "Uilson",
  "Ulyssea",
  "Uzeda",
  "Valadares",
  "Valerio",
  "Valgoi",
  "Valle",
  "Varella",
  "Vargas",
  "Vasconcellos",
  "Vasconcelos",
  "Vasquez",
  "Veiga",
  "Velasco",
  "Velho",
  "Veloso",
  "Venancio",
  "Vendruscolo",
  "Veras",
  "Verde",
  "Verdi",
  "Verissimo",
  "Verly",
  "Viana",
  "Vicente",
  "Vicentini",
  "Vidal",
  "Viegas",
  "Vieira",
  "Vilaca",
  "Vilar",
  "Vilela",
  "Villela",
  "Virgens",
  "Virgilio",
  "Visconti",
  "Visnieski",
  "Vitali",
  "Vitalina",
  "Vitoria",
  "Vizzotto",
  "Vogel",
  "Volkmann",
  "Vurdel",
  "Wahlbrink",
  "Walger",
  "Waltrick",
  "Wasielewski",
  "Weber",
  "Wernersbach",
];
const TIPOS_SANGUINEOS = ["O+", "A+", "B+", "AB+", " O−", " A−", " B−", "AB−"];

const TELEFONE_ESTADO = {
  ac: 68,
  al: 82,
  ap: 96,
  am: 92,
  ba: 71,
  ce: 88,
  df: 61,
  es: 27,
  go: 62,
  ma: 98,
  mt: 65,
  ms: 84,
  mg: 31,
  pr: 41,
  pb: 83,
  pa: 91,
  pe: 81,
  pi: 86,
  rj: 21,
  rn: 84,
  rs: 51,
  ro: 69,
  rr: 95,
  sc: 48,
  se: 79,
  sp: 11,
  to: 63,
};

const IEMASKS = {
  ac: {
    text: "01.004.823/001-12",
    textMask: [
      /\d/,
      /\d/,
      ".",
      /\d/,
      /\d/,
      /\d/,
      ".",
      /\d/,
      /\d/,
      /\d/,
      "/",
      /\d/,
      /\d/,
      /\d/,
      "-",
      /\d/,
      /\d/,
    ],
  },
  al: {
    text: "240000048",
    textMask: [/\d/, /\d/, /\d/, /\d/, /\d/, /\d/, /\d/, /\d/, /\d/],
  },
  am: {
    text: "04.145.871-0",
    textMask: [
      /\d/,
      /\d/,
      ".",
      /\d/,
      /\d/,
      /\d/,
      ".",
      /\d/,
      /\d/,
      /\d/,
      "-",
      /\d/,
    ],
  },
  ap: {
    text: "240000048",
    textMask: [/\d/, /\d/, /\d/, /\d/, /\d/, /\d/, /\d/, /\d/, /\d/],
  },
  ba: {
    text: "123456-63",
    textMask: [/\d/, /\d/, /\d/, /\d/, /\d/, /\d/, "-", /\d/, /\d/],
  },
  ce: {
    text: "06.000001-5",
    textMask: [/\d/, /\d/, ".", /\d/, /\d/, /\d/, /\d/, /\d/, /\d/, "-", /\d/],
  },
  df: {
    text: "06 000001 123-55",
    textMask: [
      /\d/,
      /\d/,
      " ",
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      " ",
      /\d/,
      /\d/,
      /\d/,
      "-",
      /\d/,
      /\d/,
    ],
  },
  es: {
    text: "082.560.67-6",
    textMask: [
      /\d/,
      /\d/,
      /\d/,
      ".",
      /\d/,
      /\d/,
      /\d/,
      ".",
      /\d/,
      /\d/,
      "-",
      /\d/,
    ],
  },
  go: {
    text: "06.000.001-5",
    textMask: [
      /\d/,
      /\d/,
      ".",
      /\d/,
      /\d/,
      /\d/,
      ".",
      /\d/,
      /\d/,
      /\d/,
      "-",
      /\d/,
    ],
  },
  ma: {
    text: "12.104.376-2",
    textMask: [
      /\d/,
      /\d/,
      ".",
      /\d/,
      /\d/,
      /\d/,
      ".",
      /\d/,
      /\d/,
      /\d/,
      "-",
      /\d/,
      /\d/,
    ],
  },
  mg: {
    text: "001.819.263/0048",
    textMask: [
      /\d/,
      /\d/,
      /\d/,
      ".",
      /\d/,
      /\d/,
      /\d/,
      ".",
      /\d/,
      /\d/,
      /\d/,
      "/",
      /\d/,
      /\d/,
      /\d/,
      /\d/,
    ],
  },
  ms: {
    text: "001819263",
    textMask: [/\d/, /\d/, /\d/, /\d/, /\d/, /\d/, /\d/, /\d/, /\d/],
  },
  mt: {
    text: "0018192630-1",
    textMask: [
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      "-",
      /\d/,
    ],
  },
  pa: {
    text: "06-000001-5",
    textMask: [/\d/, /\d/, "-", /\d/, /\d/, /\d/, /\d/, /\d/, /\d/, "-", /\d/],
  },
  pb: {
    text: "06000001-5",
    textMask: [/\d/, /\d/, /\d/, /\d/, /\d/, /\d/, /\d/, /\d/, "-", /\d/],
  },
  pe: {
    text: "0192310-24",
    textMask: [/\d/, /\d/, /\d/, /\d/, /\d/, /\d/, /\d/, "-", /\d/, /\d/],
  },
  pi: {
    text: "19.301.656-7",
    textMask: [
      /\d/,
      /\d/,
      ".",
      /\d/,
      /\d/,
      /\d/,
      ".",
      /\d/,
      /\d/,
      /\d/,
      "-",
      /\d/,
    ],
  },
  pr: {
    text: "19301656-78",
    textMask: [/\d/, /\d/, /\d/, /\d/, /\d/, /\d/, /\d/, /\d/, "-", /\d/, /\d/],
  },
  rj: {
    text: "20.040.04-1",
    textMask: [/\d/, /\d/, ".", /\d/, /\d/, /\d/, ".", /\d/, /\d/, "-", /\d/],
  },
  rn: {
    text: "20.040.040-1",
    textMask: [
      /\d/,
      /\d/,
      ".",
      /\d/,
      /\d/,
      /\d/,
      ".",
      /\d/,
      /\d/,
      /\d/,
      "-",
      /\d/,
    ],
    textMaskFunction: function mask(userInput) {
      var numbers = userInput.match(/\d/g);
      var numberLength = 0;
      if (numbers) {
        numberLength = numbers.join("").length;
      }
      if (!userInput || numberLength > 9) {
        return [
          /\d/,
          /\d/,
          ".",
          /\d/,
          /\d/,
          /\d/,
          ".",
          /\d/,
          /\d/,
          /\d/,
          "-",
          /\d/,
          /\d/,
        ];
      } else {
        return [
          /\d/,
          /\d/,
          ".",
          /\d/,
          /\d/,
          /\d/,
          ".",
          /\d/,
          /\d/,
          /\d/,
          "-",
          /\d/,
        ];
      }
    },
  },
  ro: {
    text: "101.62521-3",
    textMask: [/\d/, /\d/, /\d/, "/", /\d/, /\d/, /\d/, /\d/, /\d/, /\d/, /\d/],
  },
  rr: {
    text: "24006628-1",
    textMask: [/\d/, /\d/, /\d/, "/", /\d/, /\d/, /\d/, /\d/, /\d/, /\d/, /\d/],
  },
  rs: {
    text: "024/0440013",
    textMask: [/\d/, /\d/, /\d/, "/", /\d/, /\d/, /\d/, /\d/, /\d/, /\d/, /\d/],
  },
  sc: {
    text: "271.234.563",
    textMask: [/\d/, /\d/, /\d/, ".", /\d/, /\d/, /\d/, ".", /\d/, /\d/, /\d/],
  },
  se: {
    text: "27123456-3",
    textMask: [/\d/, /\d/, /\d/, "/", /\d/, /\d/, /\d/, /\d/, /\d/, /\d/, /\d/],
  },
  sp: {
    text: "114.814.878.119",
    textMask: [
      /\d/,
      /\d/,
      /\d/,
      ".",
      /\d/,
      /\d/,
      /\d/,
      ".",
      /\d/,
      /\d/,
      /\d/,
      ".",
      /\d/,
      /\d/,
      /\d/,
    ],
  },
  to: {
    text: "11 81 4878119",
    textMask: [
      /\d/,
      /\d/,
      " ",
      /\d/,
      /\d/,
      " ",
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
    ],
  },
};

const MASKS = {
  aih: {
    text: "000000000000-0",
    textMask: [
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      "-",
      /\d/,
    ],
  },
  cartaocredito: {
    text: "0000 0000 0000 0000 00/00 000",
    textMask: [
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      " ",
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      " ",
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      "0",
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      " ",
      /\d/,
      /\d/,
      "/",
      /\d/,
      /\d/,
      " ",
      /\d/,
      /\d/,
      /\d/,
    ],
  },
  celular: {
    text: "(00) 00000-0000",
    textMask: [
      "(",
      /[1-9]/,
      /\d/,
      ")",
      " ",
      /[5-9]/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      "-",
      /\d/,
      /\d/,
      /\d/,
      /\d/,
    ],
  },
  cep: {
    text: "00.000-000",
    textMask: [/\d/, /\d/, ".", /\d/, /\d/, /\d/, "-", /\d/, /\d/, /\d/],
  },
  // certidao Certidões de Nascimento, Casamento ou Óbito
  certidao: {
    text: "000000.00.00.0000.0.00000.000.0000000-00",
    textMask: [
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      ".",
      /\d/,
      /\d/,
      ".",
      /\d/,
      /\d/,
      ".",
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      ".",
      /\d/,
      ".",
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      ".",
      /\d/,
      /\d/,
      /\d/,
      ".",
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      "-",
      /\d/,
      /\d/,
    ],
  },
  chassi: {
    text: "AAA AAAAAA AA AA0000",
    textMask: [
      /[1-9]/,
      /\w/,
      /\w/,
      " ",
      /\w/,
      /\w/,
      /\w/,
      /\w/,
      /\w/,
      /\w/,
      " ",
      /\w/,
      /\w/,
      " ",
      /\w/,
      /\w/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
    ],
  },
  cid: {},
  cnae: {
    text: "0000-0/00",
    textMask: [/\d/, /\d/, /\d/, /\d/, "-", /\d/, "/", /\d/, /\d/],
  },
  cnh: {
    text: "000000000-00",
    textMask: [
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      "-",
      /\d/,
      /\d/,
    ],
  },
  cnpj: {
    text: "00.000.000/0000-00",
    textMask: [
      /\d/,
      /\d/,
      ".",
      /\d/,
      /\d/,
      /\d/,
      ".",
      /\d/,
      /\d/,
      /\d/,
      "/",
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      "-",
      /\d/,
      /\d/,
    ],
  },
  cns: {
    text: "000 0000 0000 00-00",
    textMask: [
      /[1|2|7|8|9]/,
      /\d/,
      /\d/,
      " ",
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      " ",
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      " ",
      /\d/,
      /\d/,
      "-",
      /\d/,
      /\d/,
    ],
  },
  contabanco: {
    text: "000 00000-0 00000-0",
    textMask: [
      /\d/,
      /\d/,
      /\d/,
      " ",
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      "-",
      /\d/,
      " ",
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      "-",
      /\d/,
    ],
  },
  cpf: {
    text: "000.000.000-00",
    textMask: [
      /\d/,
      /\d/,
      /\d/,
      ".",
      /\d/,
      /\d/,
      /\d/,
      ".",
      /\d/,
      /\d/,
      /\d/,
      "-",
      /\d/,
      /\d/,
    ],
  },
  cpfcnpj: {
    text: "0000.0000.0000",
    textMask: [
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      ".",
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      ".",
      /[0-2]/,
      /[0-9]/,
      /\d/,
      /\d/,
    ],
  },
  currency: {
    text: "0.000,00",
    textMask: createNumberMask_1.default({
      decimalLimit: 2,
      thousandsSeparatorSymbol: ".",
      decimalSymbol: ",",
      allowDecimal: true,
      integerLimit: 15,
      prefix: "R$ ",
      suffix: "",
    }),
  },
  data: {
    text: "00/00/0000",
    textMask: [
      /[0-3]/,
      /[0-9]/,
      "/",
      /[0-1]/,
      /[0-9]/,
      "/",
      /[0-2]/,
      /[0-9]/,
      /\d/,
      /\d/,
    ],
  },
  ect: {
    text: "00000000-0",
    textMask: [/\d/, /\d/, /\d/, /\d/, /\d/, /\d/, /\d/, /\d/, "-", /\d/],
  },
  endereco: {
    text: "0000.0000.0000",
    textMask: [
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      ".",
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      ".",
      /[0-2]/,
      /[0-9]/,
      /\d/,
      /\d/,
    ],
  },
  inscricaoestadual: IEMASKS,
  iptu: {
    text: "0000.0000.0000",
    textMask: [
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      ".",
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      ".",
      /[0-2]/,
      /[0-9]/,
      /\d/,
      /\d/,
    ],
  },
  number: {
    text: "0.000,00",
    textMask: createNumberMask_1.default({
      decimalLimit: 2,
      thousandsSeparatorSymbol: ".",
      decimalSymbol: ",",
      allowDecimal: true,
      integerLimit: 15,
      prefix: "",
      suffix: "",
    }),
  },
  porcentagem: {
    text: "00,00%",
    textMask: createNumberMask_1.default({
      decimalLimit: 2,
      thousandsSeparatorSymbol: ".",
      decimalSymbol: ",",
      allowDecimal: true,
      integerLimit: 15,
      prefix: "",
    }),
  },
  pispasep: {
    text: "000.00000.00-0",
    textMask: [
      /\d/,
      /\d/,
      /\d/,
      ".",
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      ".",
      /\d/,
      /\d/,
      "-",
      /\d/,
    ],
  },
  placa: {
    text: "AAA-0000",
    textMask: [/[A-S]/, /[A-Z]/, /[A-Z]/, "-", /\d/, /\d/, /\d/, /\d/],
  },
  processo: {
    text: "0000000-00.0000.AAA.0000",
    textMask: [
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      "-",
      /\d/,
      /\d/,
      ".",
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      ".",
      /[A-Za-z]/,
      /[A-Za-z]/,
      /[A-Za-z]/,
      ".",
      /\d/,
      /\d/,
      /\d/,
      /\d/,
    ],
  },
  renavam: {
    text: "0000000000-00",
    textMask: [
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      "-",
      /\d/,
    ],
    textMaskFunction: function mask(userInput) {
      var numbers = userInput.match(/\d/g);
      var numberLength = 0;
      if (numbers) {
        numberLength = numbers.join("").length;
      }
      if (!userInput || numberLength < 9) {
        return [/\d/, /\d/, /\d/, /\d/, /\d/, /\d/, /\d/, /\d/, "-", /\d/];
      } else {
        return [
          /\d/,
          /\d/,
          /\d/,
          /\d/,
          /\d/,
          /\d/,
          /\d/,
          /\d/,
          /\d/,
          /\d/,
          "-",
          /\d/,
        ];
      }
    },
  },
  rg: {
    text: "AA-00.000.000",
    textMask: [
      /[A-Za-z]/,
      /[A-Za-z]/,
      "-",
      /\d/,
      /\d/,
      ".",
      /\d/,
      /\d/,
      /\d/,
      ".",
      /\d/,
      /\d/,
      /\d/,
    ],
  },
  sped: {
    text: "0000.0000.0000",
    textMask: [
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      ".",
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      ".",
      /[0-2]/,
      /[0-9]/,
      /\d/,
      /\d/,
    ],
  },
  telefone: {
    text: "(00) 00000-0000",
    textMask: [
      "(",
      /[1-9]/,
      /\d/,
      ")",
      " ",
      /[1-9]/,
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      "-",
      /\d/,
      /\d/,
      /\d/,
      /\d/,
    ],
    textMaskFunction: function mask(userInput) {
      var numbers = userInput.match(/\d/g);
      var numberLength = 0;
      if (numbers) {
        numberLength = numbers.join("").length;
      }
      if (!userInput || numberLength > 10) {
        return [
          "(",
          /[1-9]/,
          /\d/,
          ")",
          " ",
          /[1-9]/,
          /\d/,
          /\d/,
          /\d/,
          /\d/,
          "-",
          /\d/,
          /\d/,
          /\d/,
          /\d/,
        ];
      } else {
        return [
          "(",
          /[1-9]/,
          /\d/,
          ")",
          " ",
          /[1-9]/,
          /\d/,
          /\d/,
          /\d/,
          "-",
          /\d/,
          /\d/,
          /\d/,
          /\d/,
        ];
      }
    },
  },
  time: {
    text: "00:00",
    textMask: [/\d/, /\d/, ":", /[0-5]/, /\d/],
  },
  titulo: {
    text: "0000.0000.0000",
    textMask: [
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      ".",
      /\d/,
      /\d/,
      /\d/,
      /\d/,
      ".",
      /[0-2]/,
      /[0-9]/,
      /\d/,
      /\d/,
    ],
  },
  utils: {
    numberToString: function (n) {
      if (!n || typeof n === "string") {
        return n;
      }
      return n.toString().replace(".", ",");
    },
  },
};

var __assign =
  (this && this.__assign) ||
  function () {
    __assign =
      Object.assign ||
      function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
      };
    return __assign.apply(this, arguments);
  };

function makeGeneric(key) {
  return function (value) {
    if (!value) {
      return "";
    }
    var mask = MASKS[key].textMask;
    if (MASKS[key].textMaskFunction) {
      mask = MASKS[key].textMaskFunction(value);
    }
    return conformToMask(value, mask, {
      guide: false,
    }).conformedValue;
  };
}

const ESTADOS_SIGLA = [
  "ac",
  "al",
  "am",
  "ap",
  "ba",
  "ce",
  "df",
  "es",
  "go",
  "ma",
  "mg",
  "ms",
  "mt",
  "pa",
  "pb",
  "pe",
  "pi",
  "pr",
  "rj",
  "rn",
  "ro",
  "rr",
  "rs",
  "sc",
  "se",
  "sp",
  "to",
];

const CEP_ESTADO = {
  ac: [[69900000, 69999999]],
  al: [[57000000, 57999999]],
  am: [
    [69000000, 69299999],
    [69400000, 69899999],
  ],
  ap: [[68900000, 68999999]],
  ba: [[40000000, 48999999]],
  ce: [[60000000, 63999999]],
  df: [
    [70000000, 72799999],
    [73000000, 73699999],
  ],
  es: [[29000000, 29999999]],
  go: [
    [72800000, 72999999],
    [73700000, 76799999],
  ],
  ma: [[65000000, 65999999]],
  mg: [[30000000, 39999999]],
  ms: [[79000000, 79999999]],
  mt: [[78000000, 78899999]],
  pa: [[66000000, 68899999]],
  pb: [[58000000, 58999999]],
  pe: [[50000000, 56999999]],
  pi: [[64000000, 64999999]],
  pr: [[80000000, 87999999]],
  rj: [[20000000, 28999999]],
  rn: [[59000000, 59999999]],
  ro: [[76800000, 76999999]],
  rr: [[69300000, 69399999]],
  rs: [[90000000, 99999999]],
  sc: [[88000000, 89999999]],
  se: [[49000000, 49999999]],
  sp: [[1000000, 19999999]],
  to: [[77000000, 77999999]],
};

const LOCALIZACAO_RUAS = [
  "Dois",
  "Um",
  "Principal",
  "São José",
  "Onze",
  "São Paulo",
  "Doze",
  "Treze",
  "Santo Antônio",
  "Brasil",
  "A",
  "São Pedro",
  "Quinze",
  "São João",
  "Quatorze",
  "São Francisco",
  "Sete de Setembro",
  "Dezesseis",
  "Quinze de Novembro",
  "Tiradentes",
  "Dezessete",
  "Vinte",
  "Bahia",
  "Amazonas",
  "Dezoito",
  "São Sebastião",
  "Paraná",
  "Bela Vista",
  "Santa Luzia",
  "São Jorge",
  "Castro Alves",
  "Duque de Caxias",
  "Projetada",
  "Rui Barbosa",
  "Santa Catarina",
  "Minas Gerais",
  "Santos Dumont",
  "Espírito Santo",
  "Vinte e Um",
  "Vinte e Dois",
  "da Paz",
  "Treze de Maio",
  "Rio de Janeiro",
  "Goiás",
  "Ceará",
  "Belo Horizonte",
  "das Flores",
  "Sergipe",
  "Vitória",
  "José Bonifácio",
  "Pernambuco",
  "Piauí",
  "Vinte e Três",
  "Mato Grosso",
  "Santa Maria",
  "Dom Pedro II",
  "Primeiro de Maio",
  "Pará",
  "Maranhão",
  "Alagoas",
  "Boa Vista",
  "São Luiz",
  "Vinte e Quatro",
  "Paraíba",
  "Santa Rita",
];
const LOCALIZACAO_LOGRADOUROS = ["Avenida", "Rua", "Marginal"];
const LOCALIZACAO_COMPLEMENTOS = [
  "Apartamento",
  "Aeroporto",
  "Anexo",
  "Andar",
  "Bloco",
  "Conjunto",
  "Cobertura",
  "Casa",
  "Fazenda",
  "Fundos",
  "Galeria",
  "Galp\u00E3o",
  "Lote",
  "Loja",
  "Port\u00E3o",
  "Quadra",
  "Sala",
  "Sobreloja",
  "Subsolo",
  "Terreo",
];
const LOCALIZACAO_BAIRROS = [
  "Centro",
  "Bela Vista",
  "São José",
  "Santo Antônio",
  "São Francisco",
  "Vila Nova",
  "Boa Vista",
  "Industrial",
  "São Cristóvão",
  "Planalto",
];
const LOCALIZACAO_ESTADOS = [
  {
    nome: "Acre",
    uf: "AC",
  },
  {
    nome: "Alagoas",
    uf: "AL",
  },
  {
    nome: "Amapá",
    uf: "AP",
  },
  {
    nome: "Amazonas",
    uf: "AM",
  },
  {
    nome: "Bahia",
    uf: "BA",
  },
  {
    nome: "Ceará",
    uf: "CE",
  },
  {
    nome: "Distrito Federal",
    uf: "DF",
  },
  {
    nome: "Espírito Santo",
    uf: "ES",
  },
  {
    nome: "Goiás",
    uf: "GO",
  },
  {
    nome: "Maranhão",
    uf: "MA",
  },
  {
    nome: "Mato Grosso",
    uf: "MT",
  },
  {
    nome: "Mato Grosso do Sul",
    uf: "MS",
  },
  {
    nome: "Minas Gerais",
    uf: "MG",
  },
  {
    nome: "Pará",
    uf: "PA",
  },
  {
    nome: "Paraíba",
    uf: "PB",
  },
  {
    nome: "Paraná",
    uf: "PR",
  },
  {
    nome: "Pernambuco",
    uf: "PE",
  },
  {
    nome: "Piauí",
    uf: "PI",
  },
  {
    nome: "Rio de Janeiro",
    uf: "RJ",
  },
  {
    nome: "Rio Grande do Norte",
    uf: "RN",
  },
  {
    nome: "Rio Grande do Sul",
    uf: "RS",
  },
  {
    nome: "Rondônia",
    uf: "RO",
  },
  {
    nome: "Roraima",
    uf: "RR",
  },
  {
    nome: "Santa Catarina",
    uf: "SC",
  },
  {
    nome: "São Paulo",
    uf: "SP",
  },
  {
    nome: "Sergipe",
    uf: "SE",
  },
  {
    nome: "Tocantins",
    uf: "TO",
  },
];
const LOCALIZACAO_CIDADES = [
  ["São Paulo", "São Paulo"],
  ["Rio de Janeiro", "Rio de Janeiro"],
  ["Brasília", "Distrito Federal"],
  ["Salvador", "Bahia"],
  ["Fortaleza", "Ceará"],
  ["Belo Horizonte", "Minas Gerais"],
  ["Manaus", "Amazonas"],
  ["Curitiba", "Paraná"],
  ["Recife", "Pernambuco"],
  ["Goiânia", "Goiás"],
  ["Belém", "Pará"],
  ["Porto Alegre", "Rio Grande do Sul"],
  ["Guarulhos", "São Paulo"],
  ["Campinas", "São Paulo"],
  ["São Luís", "Maranhão"],
  ["São Gonçalo", "Rio de Janeiro"],
  ["Maceió", "Alagoas"],
  ["Duque de Caxias", "Rio de Janeiro"],
  ["Cuiabá", "Mato Grosso"],
  ["Campo Grande", "Mato Grosso do Sul"],
  ["Natal", "Rio Grande do Norte"],
  ["Teresina", "Piauí"],
  ["São Bernardo do Campo", "São Paulo"],
  ["Nova Iguaçu", "Rio de Janeiro"],
  ["João Pessoa", "Paraíba"],
  ["São José dos Campos", "São Paulo"],
  ["Santo André", "São Paulo"],
  ["Ribeirão Preto", "São Paulo"],
  ["Jaboatão dos Guararapes", "Pernambuco"],
  ["Osasco", "São Paulo"],
  ["Uberlândia", "Minas Gerais"],
  ["Sorocaba", "São Paulo"],
  ["Contagem", "Minas Gerais"],
  ["Aracaju", "Sergipe"],
  ["Feira de Santana", "Bahia"],
  ["Cuiabá", "Mato Grosso"],
  ["Joinville", "Santa Catarina"],
  ["Aparecida de Goiânia", "Goiás"],
  ["Londrina", "Paraná"],
  ["Juiz de Fora", "Minas Gerais"],
  ["Ananindeua", "Pará"],
  ["Porto Velho", "Rondônia"],
  ["Serra", "Espírito Santo"],
  ["Niterói", "Rio de Janeiro"],
  ["Belford Roxo", "Rio de Janeiro"],
  ["Caxias do Sul", "Rio Grande do Sul"],
  ["Campos dos Goytacazes Campos dos Goytacazes", "Rio de Janeiro"],
  ["Macapá", "Amapá"],
  ["Florianópolis", "Santa Catarina"],
  ["Vila Velha", "Espírito Santo"],
  ["Mauá", "São Paulo"],
  ["São João de Meriti", "Rio de Janeiro"],
  ["São José do Rio Preto", "São Paulo"],
  ["Mogi das Cruzes", "São Paulo"],
  ["Betim", "Minas Gerais"],
  ["Santos", "São Paulo"],
  ["Diadema", "São Paulo"],
  ["Maringá", "Paraná"],
  ["Jundiaí", "São Paulo"],
  ["Campina Grande", "Paraíba"],
  ["Montes Claros", "Minas Gerais"],
  ["Rio Branco", "Acre"],
  ["Piracicaba", "São Paulo"],
  ["Carapicuíba", "São Paulo"],
  ["Boa Vista", "Roraima"],
  ["Olinda", "Pernambuco"],
  ["Anápolis", "Goiás"],
  ["Cariacica", "Espírito Santo"],
  ["Bauru", "São Paulo"],
  ["Itaquaquecetuba", "São Paulo"],
  ["São Vicente", "São Paulo"],
  ["Vitória", "Espírito Santo"],
  ["Caucaia", "Ceará"],
  ["Caruaru", "Pernambuco"],
  ["Blumenau", "Santa Catarina"],
  ["Franca", "São Paulo"],
  ["Ponta Grossa", "Paraná"],
  ["Petrolina", "Pernambuco"],
  ["Canoas", "Rio Grande do Sul"],
  ["Pelotas", "Rio Grande do Sul"],
  ["Vitória da Conquista", "Bahia"],
  ["Ribeirão das Neves", "Minas Gerais"],
  ["Uberaba", "Minas Gerais"],
  ["Paulista", "Pernambuco"],
  ["Cascavel", "Paraná"],
  ["Praia Grande", "São Paulo"],
  ["São José dos Pinhais", "Paraná"],
  ["Guarujá", "São Paulo"],
  ["Taubaté", "São Paulo"],
  ["Petrópolis", "Rio de Janeiro"],
  ["Limeira", "São Paulo"],
  ["Santarém", "Pará"],
  ["Camaçari", "Bahia"],
  ["Palmas", "Tocantins"],
  ["Suzano", "São Paulo"],
  ["Mossoró", "Rio Grande do Norte"],
  ["Taboão da Serra", "São Paulo"],
  ["Várzea Grande", "Mato Grosso"],
  ["Sumaré", "São Paulo"],
  ["Santa Maria", "Rio Grande do Sul"],
  ["Gravataí", "Rio Grande do Sul"],
  ["Governador Valadares", "Minas Gerais"],
  ["Marabá", "Pará"],
  ["Juazeiro do Norte", "Ceará"],
  ["Barueri", "São Paulo"],
  ["Embu das Artes", "São Paulo"],
  ["Volta Redonda", "Rio de Janeiro"],
  ["Ipatinga", "Minas Gerais"],
  ["Parnamirim", "Rio Grande do Norte"],
  ["Imperatriz", "Maranhão"],
  ["Foz do Iguaçu", "Paraná"],
  ["Macaé", "Rio de Janeiro"],
  ["Viamão", "Rio Grande do Sul"],
  ["São Carlos", "São Paulo"],
  ["Indaiatuba", "São Paulo"],
  ["Cotia", "São Paulo"],
  ["Novo Hamburgo", "Rio Grande do Sul"],
  ["São José", "Santa Catarina"],
  ["Magé", "Rio de Janeiro"],
  ["Colombo", "Paraná"],
  ["Itaboraí", "Rio de Janeiro"],
  ["Sete Lagoas", "Minas Gerais"],
  ["Americana", "São Paulo"],
  ["Marília", "São Paulo"],
  ["Divinópolis", "Minas Gerais"],
  ["Itapevi", "São Paulo"],
  ["São Leopoldo", "Rio Grande do Sul"],
  ["Araraquara", "São Paulo"],
  ["Rio Verde", "Goiás"],
  ["Jacareí", "São Paulo"],
  ["Rondonópolis", "Mato Grosso"],
  ["Arapiraca", "Alagoas"],
  ["Hortolândia", "São Paulo"],
  ["Presidente Prudente", "São Paulo"],
  ["Maracanaú", "Ceará"],
  ["Dourados", "Mato Grosso do Sul"],
  ["Chapecó Chapecó", "Santa Catarina"],
  ["Cabo Frio", "Rio de Janeiro"],
  ["Itajaí", "Santa Catarina"],
  ["Santa Luzia", "Minas Gerais"],
  ["Juazeiro", "Bahia"],
  ["Criciúma", "Santa Catarina"],
  ["Itabuna", "Bahia"],
  ["Águas Lindas de Goiás", "Goiás"],
  ["Rio Grande", "Rio Grande do Sul"],
  ["Alvorada", "Rio Grande do Sul"],
  ["Cachoeiro de Itapemirim", "Espírito Santo"],
  ["Sobral", "Ceará"],
  ["Luziânia", "Goiás"],
  ["Parauapebas", "Pará"],
  ["Cabo de Santo Agostinho", "Pernambuco"],
  ["Rio Claro", "São Paulo"],
  ["Angra dos Reis", "Rio de Janeiro"],
  ["Passo Fundo", "Rio Grande do Sul"],
  ["Castanhal", "Pará"],
  ["Lauro de Freitas", "Bahia"],
  ["Araçatuba", "São Paulo"],
  ["Ferraz de Vasconcelos", "São Paulo"],
  ["Santa Bárbara do Oeste", "São Paulo"],
  ["Nova Friburgo", "Rio de Janeiro"],
  ["Barra Mansa", "Rio de Janeiro"],
  ["Nossa Senhora do Socorro", "Sergipe"],
  ["Teresópolis", "Rio de Janeiro"],
  ["Guarapuava", "Paraná"],
  ["Araguaína", "Tocantins"],
  ["Ibirité", "Minas Gerais"],
  ["Jaraguá do Sul", "Santa Catarina"],
  ["São José de Ribamar", "Maranhão"],
  ["Mesquita", "Rio de Janeiro"],
  ["Francisco Morato", "São Paulo"],
  ["Itapecerica da Serra", "São Paulo"],
  ["Itu", "São Paulo"],
  ["Linhares", "Espírito Santo"],
  ["Palhoça", "Santa Catarina"],
  ["Timon", "Maranhão"],
  ["Bragança Paulista", "São Paulo"],
  ["Valparaíso de Goiás", "Goiás"],
  ["Pindamonhangaba", "São Paulo"],
  ["Poços de Caldas", "Minas Gerais"],
  ["Caxias", "Maranhão"],
  ["Itapetininga", "São Paulo"],
  ["Nilópolis", "Rio de Janeiro"],
  ["Ilhéus", "Bahia"],
  ["Maricá", "Rio de Janeiro"],
  ["São Caetano do Sul", "São Paulo"],
  ["Teixeira de Freitas", "Bahia"],
  ["Camaragibe", "Pernambuco"],
  ["Abaetetuba", "Pará"],
  ["Lages", "Santa Catarina"],
  ["Jequié", "Bahia"],
  ["Barreiras", "Bahia"],
  ["Paranaguá", "Paraná"],
  ["Franco da Rocha", "São Paulo"],
  ["Parnaíba", "Piauí"],
  ["Patos de Minas", "Minas Gerais"],
  ["Mogi Guaçu", "São Paulo"],
  ["Alagoinhas", "Bahia"],
  ["Pouso Alegre", "Minas Gerais"],
  ["Rio das Ostras", "Rio de Janeiro"],
  ["Queimados", "Rio de Janeiro"],
  ["Jaú", "São Paulo"],
  ["Porto Seguro", "Bahia"],
  ["Botucatu", "São Paulo"],
  ["Araucária", "Paraná"],
  ["Sinop", "Mato Grosso"],
  ["Atibaia", "São Paulo"],
  ["Balneário Camboriú", "Santa Catarina"],
  ["Sapucaia do Sul", "Rio Grande do Sul"],
  ["Toledo", "Paraná"],
  ["Teófilo Otoni", "Minas Gerais"],
  ["Garanhuns", "Pernambuco"],
  ["Santana de Parnaíba", "São Paulo"],
  ["Vitória de Santo Antão", "Pernambuco"],
  ["Cametá", "Pará"],
  ["Barbacena", "Minas Gerais"],
  ["Santa Rita", "Paraíba"],
  ["Sabará", "Minas Gerais"],
  ["Varginha", "Minas Gerais"],
  ["Apucarana", "Paraná"],
  ["Brusque", "Santa Catarina"],
  ["Simões Filho", "Bahia"],
  ["Araras", "São Paulo"],
  ["Itaguaí", "Rio de Janeiro"],
  ["Araruama", "Rio de Janeiro"],
  ["Pinhais", "Paraná"],
  ["Crato", "Ceará"],
  ["Campo Largo", "Paraná"],
  ["Marituba", "Pará"],
  ["Resende", "Rio de Janeiro"],
  ["Cubatão", "São Paulo"],
  ["São Mateus", "Espírito Santo"],
  ["Santa Cruz do Sul", "Rio Grande do Sul"],
  ["Cachoeirinha", "Rio Grande do Sul"],
  ["Itapipoca", "Ceará"],
  ["Valinhos", "São Paulo"],
  ["Maranguape", "Ceará"],
  ["Ji-Paraná", "Rondônia"],
  ["Conselheiro Lafaiete", "Minas Gerais"],
  ["São Félix do Xingu", "Pará"],
  ["Bragança", "Pará"],
  ["Vespasiano", "Minas Gerais"],
  ["Trindade", "Goiás"],
  ["Uruguaiana", "Rio Grande do Sul"],
  ["Sertãozinho", "São Paulo"],
  ["Jandira", "São Paulo"],
  ["Guarapari", "Espírito Santo"],
  ["Barcarena", "Pará"],
  ["Birigui", "São Paulo"],
  ["Ribeirão Pires", "São Paulo"],
  ["Arapongas", "Paraná"],
  ["Codó", "Maranhão"],
  ["Colatina", "Espírito Santo"],
  ["Votorantim", "São Paulo"],
  ["Paço do Lumiar", "Maranhão"],
  ["Barretos", "São Paulo"],
  ["Catanduva", "São Paulo"],
  ["Várzea Paulista", "São Paulo"],
  ["Guaratinguetá", "São Paulo"],
  ["Tatuí", "São Paulo"],
  ["Formosa", "Goiás"],
  ["Caraguatatuba", "São Paulo"],
  ["Três Lagoas", "Mato Grosso do Sul"],
  ["Santana", "Amapá"],
  ["Bagé", "Rio Grande do Sul"],
  ["Itatiba", "São Paulo"],
  ["Bento Gonçalves", "Rio Grande do Sul"],
  ["Itabira", "Minas Gerais"],
  ["Salto", "São Paulo"],
  ["Almirante Tamandaré", "Paraná"],
  ["Paulo Afonso", "Bahia"],
  ["Poá", "São Paulo"],
  ["Araguari", "Minas Gerais"],
  ["Igarassu", "Pernambuco"],
  ["Novo Gama", "Goiás"],
  ["Ubá", "Minas Gerais"],
  ["Senador Canedo", "Goiás"],
  ["Passos", "Minas Gerais"],
  ["Altamira", "Pará"],
  ["Parintins", "Amazonas"],
  ["Tucuruí", "Pará"],
  ["Ourinhos", "São Paulo"],
  ["Eunápolis", "Bahia"],
  ["São Lourenço da Mata", "Pernambuco"],
  ["Paragominas", "Pará"],
  ["Piraquara", "Paraná"],
  ["Açailândia", "Maranhão"],
  ["Umuarama", "Paraná"],
  ["Corumbá", "Mato Grosso do Sul"],
  ["Coronel Fabriciano", "Minas Gerais"],
  ["Paulínia", "São Paulo"],
  ["Catalão", "Goiás"],
  ["Muriaé", "Minas Gerais"],
  ["Santa Cruz do Capibaribe", "Pernambuco"],
  ["Ariquemes", "Rondônia"],
  ["Patos", "Paraíba"],
  ["Cambé", "Paraná"],
  ["Tailândia", "Pará"],
  ["Araxá", "Minas Gerais"],
  ["Erechim", "Rio Grande do Sul"],
  ["Tubarão", "Santa Catarina"],
  ["Bacabal", "Maranhão"],
  ["Japeri", "Rio de Janeiro"],
  ["Itumbiara", "Goiás"],
  ["Ituiutaba", "Minas Gerais"],
  ["São Pedro da Aldeia", "Rio de Janeiro"],
  ["Lagarto", "Sergipe"],
  ["Assis", "São Paulo"],
  ["Lavras", "Minas Gerais"],
  ["Tangará da Serra", "Mato Grosso"],
  ["Leme", "São Paulo"],
  ["Itaperuna", "Rio de Janeiro"],
  ["Breves", "Pará"],
  ["Nova Serrana", "Minas Gerais"],
  ["Iguatu", "Ceará"],
  ["São Gonçalo do Amarante", "Rio Grande do Norte"],
  ["Itanhaém", "São Paulo"],
  ["Santo Antônio de Jesus", "Bahia"],
  ["Caieiras", "São Paulo"],
  ["Itacoatiara", "Amazonas"],
  ["Itaituba", "Pará"],
  ["Aracruz", "Espírito Santo"],
  ["Jataí", "Goiás"],
  ["Barra do Piraí", "Rio de Janeiro"],
  ["Fazenda Rio Grande", "Paraná"],
  ["Mairiporã", "São Paulo"],
];

function fakeNumber(options) {
  if (options === void 0) {
    options = {};
  }
  if (!options.max) {
    options.max = 10000;
  }
  if (options.min === undefined) {
    options.min = 0;
  }
  if (options.decimals === undefined) {
    options.decimals = 2;
  }
  var x = Math.random() * options.max + options.min;
  if (options.decimals === 0) {
    return Math.floor(x);
  }
  return parseFloat(x.toFixed(options.decimals));
}

function randomNumber(begin, end) {
  var dif = end - begin;
  var number = Math.floor(Math.random() * dif) + begin;
  return number;
}

function gerarCep(options) {
  if (options === void 0) {
    options = {};
  }
  if (!options.estado) {
    options.estado = randomEstadoSigla();
  }
  var range = CEP_ESTADO[options.estado];
  var cep = randomNumber(range[0][0], range[0][1]);
  if (cep < 10000000) {
    cep = "0" + cep.toString();
  } else {
    cep = cep.toString();
  }
  return cep;
}

function randomEstadoSigla() {
  var total = ESTADOS_SIGLA.length;
  return ESTADOS_SIGLA[Math.floor(Math.random() * total)];
}

function randArray(array) {
  var index = randomNumber(0, array.length);
  return array[index];
}

function celular(options) {
  if (options === void 0) {
    options = {};
  }
  return telefone(
    __assign({}, options, {
      celular: true,
    })
  );
}

function makeGenericFaker(val, options) {
  if (options === void 0) {
    options = null;
  }
  return function () {
    if (!val.textMask || !val.textMask.map) {
      return "";
    }
    var newData = val.textMask.map(function (c, index) {
      if (options && options[index]) {
        return options[index]();
      }
      c = c.toString();
      if (c === /\d/.toString()) {
        return Math.floor(Math.random() * 10).toString();
      } else if (c === /[A-Za-z]/.toString()) {
        return randomLetter(1).toString();
      } else if (c === /\w/.toString()) {
        return randomLetterOrNumber(1).toString();
      } else if (c.indexOf("/[") === 0) {
        // /[1-9]/ ou /[5-9]/
        c = c.replace("/[", "").replace("]/", "");
        if (c.indexOf("-") > 0) {
          c = c.split("-");
          if (parseInt(c[1])) {
            var mult = c[1] - c[0];
            var plus = parseInt(c[0]);
            return (Math.floor(Math.random() * mult) + plus).toString();
          } else {
            return rand(1, [c[0], c[1]]);
          }
        } else if (c.indexOf("|") > 0) {
          c = c.split("|");
          var index_1 = Math.floor(Math.random() * c.length);
          return c[index_1];
        }
      } else {
        return c;
      }
    });
    return newData.join("");
  };
}

function modulo11(string, size, mod) {
  var soma = 0;
  for (var i = 1; i <= size; i++) {
    // tslint:disable-next-line:radix
    soma = soma + parseInt(string.substring(i - 1, i)) * (mod - i);
  }
  var resto = (soma * 10) % 11;
  if (resto === 10 || resto === 11) {
    resto = 0;
  }
  return resto;
}

function gerarCpf() {
  var n = 9;
  var n1 = randomiza(n);
  var n2 = randomiza(n);
  var n3 = randomiza(n);
  var n4 = randomiza(n);
  var n5 = randomiza(n);
  var n6 = randomiza(n);
  var n7 = randomiza(n);
  var n8 = randomiza(n);
  var n9 = randomiza(n);
  var d1 =
    n9 * 2 +
    n8 * 3 +
    n7 * 4 +
    n6 * 5 +
    n5 * 6 +
    n4 * 7 +
    n3 * 8 +
    n2 * 9 +
    n1 * 10;
  d1 = 11 - modulo(d1, 11);
  if (d1 >= 10) d1 = 0;
  var d2 =
    d1 * 2 +
    n9 * 3 +
    n8 * 4 +
    n7 * 5 +
    n6 * 6 +
    n5 * 7 +
    n4 * 8 +
    n3 * 9 +
    n2 * 10 +
    n1 * 11;
  d2 = 11 - modulo(d2, 11);
  if (d2 >= 10) d2 = 0;

  return "" + n1 + n2 + n3 + n4 + n5 + n6 + n7 + n8 + n9 + d1 + d2;
}

function gerarEndereco(options) {
  if (options === void 0) {
    options = {};
  }
  var cep = gerarCep();
  if (!options.estado) {
    options.estado = randomEstadoSigla();
  }
  var estadoFound = LOCALIZACAO_ESTADOS.find(function (e) {
    return e.uf.toLowerCase() === options.estado;
  });
  var cidades = LOCALIZACAO_CIDADES.filter(function (c) {
    return c[1] === estadoFound.nome;
  });
  var cidade = randArray(cidades);
  var estado = cidade[1].toLowerCase();
  estado = LOCALIZACAO_ESTADOS.find(function (e) {
    return e.nome.toLowerCase() === estado.toLowerCase();
  });
  return {
    nome: "Principal",
    ativo: true,
    cep: cep,
    logradouro: randArray(LOCALIZACAO_RUAS),
    complemento:
      randArray(LOCALIZACAO_COMPLEMENTOS) +
      " " +
      fakeNumber({
        min: 1,
        max: 10,
        decimals: 0,
      }),
    numero: fakeNumber({
      min: 1,
      decimals: 0,
    }),
    bairro: randArray(LOCALIZACAO_BAIRROS),
    municipio: cidade[0],
    //estado: cidade[1],
    uf: estado.uf,
  };
}

function gerarEmail(options) {
  if (options === void 0) {
    options = {};
  }
  var nome = randArray(NOMES_MASCULINOS);
  if (options.nome) {
    nome = options.nome;
  }
  nome = slugify(nome);
  var empresa = nome;
  if (options.empresa) {
    empresa = options.empresa;
  }
  var site = gerarSite({
    nome: empresa,
    url: "",
  });
  return nome + "@" + site;
}

function getAstro(data) {
  var month, day;
  if (typeof data === "string") {
    day = parseInt(data.split("/")[0]);
    month = parseInt(data.split("/")[1]);
  } else {
    day = data.getDate() + 1;
    month = data.getMonth() + 1;
  }
  if (month < 1 || month > 12) {
    throw new Error("Mes inválido : " + month);
  }
  if (day < 1 || day > 32) {
    throw new Error("Dia inválido : " + day);
  }
  if ((month == 1 && day < 20) || (month == 12 && day >= 22)) {
    return "Capricórnio";
  } else if ((month == 2 && day < 19) || (month == 1 && day >= 22)) {
    return "Aquários";
  } else if ((month == 3 && day < 21) || (month == 2 && day >= 24)) {
    return "Peixes";
  } else if ((month == 4 && day < 20) || (month == 3 && day >= 23)) {
    return "Aries";
  } else if ((month == 5 && day < 21) || (month == 4 && day >= 23)) {
    return "Touro";
  } else if ((month == 6 && day < 22) || (month == 5 && day >= 23)) {
    return "Gêmeos";
  } else if ((month == 7 && day < 23) || (month == 6 && day >= 22)) {
    return "Cancer";
  } else if ((month == 8 && day < 23) || (month == 7 && day >= 21)) {
    return "Leao";
  } else if ((month == 9 && day < 23) || (month == 8 && day >= 20)) {
    return "Virgo";
  } else if ((month == 10 && day < 24) || (month == 9 && day >= 21)) {
    return "Libra";
  } else if ((month == 11 && day < 22) || (month == 10 && day >= 19)) {
    return "Escorpião";
  } else if ((month == 12 && day < 22) || (month == 11 && day >= 20)) {
    return "Sagitário";
  }
}

function randomLetter(size, onlyCapitals) {
  if (size === void 0) {
    size = 1;
  }
  if (onlyCapitals === void 0) {
    onlyCapitals = false;
  }
  var text = "";
  var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
  if (onlyCapitals == false) {
    possible += "abcdefghijklmnopqrstuvwxyz";
  }
  possible = possible.split("");
  for (var i = 0; i < size; i++) {
    var pos = Math.floor(Math.random() * possible.length);
    text += possible[pos];
  }
  return text;
}

function gerarData(config) {
  if (config === void 0) {
    config = {};
  }
  const intervalos = [0, 15, 30, 45];
  var date = new Date();

  if (
    typeof config.idadeMin != "undefined" &&
    typeof config.idadeMax != "undefined"
  ) {
    config.anos = -randomNumber(config.idadeMin, config.idadeMax);
    date.setFullYear(date.getFullYear() + config.anos);
  } else {
    date.setFullYear(randomNumber(1980, date.getFullYear()));
  }

  if (
    typeof config.diaMin != "undefined" &&
    typeof config.diaMax != "undefined"
  ) {
    config.dias = -randomNumber(config.diaMin, config.diaMax);
    date.setDate(date.getDate() + config.dias);
  } else {
    date.setDate(randomiza(28));
  }

  if (
    typeof config.mesMin != "undefined" &&
    typeof config.mesMax != "undefined"
  ) {
    config.meses = -randomNumber(config.mesMin, config.mesMax);
    date.setMonth(date.getMonth() + config.meses);
  } else {
    date.setMonth(randomiza(11));
  }

  date.setHours(randomNumber(7, 17));
  date.setMinutes(intervalos[randomiza(3)]);
  date.setSeconds(0);
  date.setMilliseconds(0);

  return date;
}

function randomiza(n) {
  var ranNum = Math.round(Math.random() * n);
  return ranNum;
}

function modulo(dividendo, divisor) {
  return Math.round(dividendo - Math.floor(dividendo / divisor) * divisor);
}

function gerarCnpj() {
  var n = 9;
  var n1 = randomiza(n);
  var n2 = randomiza(n);
  var n3 = randomiza(n);
  var n4 = randomiza(n);
  var n5 = randomiza(n);
  var n6 = randomiza(n);
  var n7 = randomiza(n);
  var n8 = randomiza(n);
  var n9 = 0; //randomiza(n);
  var n10 = 0; //randomiza(n);
  var n11 = 0; //randomiza(n);
  var n12 = 1; //randomiza(n);
  var d1 =
    n12 * 2 +
    n11 * 3 +
    n10 * 4 +
    n9 * 5 +
    n8 * 6 +
    n7 * 7 +
    n6 * 8 +
    n5 * 9 +
    n4 * 2 +
    n3 * 3 +
    n2 * 4 +
    n1 * 5;
  d1 = 11 - modulo(d1, 11);
  if (d1 >= 10) d1 = 0;
  var d2 =
    d1 * 2 +
    n12 * 3 +
    n11 * 4 +
    n10 * 5 +
    n9 * 6 +
    n8 * 7 +
    n7 * 8 +
    n6 * 9 +
    n5 * 2 +
    n4 * 3 +
    n3 * 4 +
    n2 * 5 +
    n1 * 6;
  d2 = 11 - modulo(d2, 11);
  if (d2 >= 10) d2 = 0;

  return (
    "" + n1 + n2 + n3 + n4 + n5 + n6 + n7 + n8 + n9 + n10 + n11 + n12 + d1 + d2
  );
}

function gerarTelefone(options) {
  if (options === void 0) {
    options = {};
  }
  var telefone = makeGenericFaker(MASKS["telefone"])();
  if (options.estado) {
    var telefones = telefone.toString().split("");
    var ddd = TELEFONE_ESTADO[options.estado.toLowerCase()].toString();
    telefones[1] = ddd[0];
    telefones[2] = ddd[1];
    telefone = telefones.join("");
  }
  if (options.celular) {
    var telefones = telefone.toString().split("");
    telefones[5] = "9";
    telefone = telefones.join("");
  }
  return telefone.replace(/[^\d]+/g, "");
}

function gerarCelular(options) {
  if (options === void 0) {
    options = {};
  }
  return gerarTelefone(
    __assign({}, options, {
      celular: true,
    })
  );
}

function calculoTrivialGenerate(valor, base, validarTamanho) {
  if (base === void 0) {
    base = null;
  }
  if (validarTamanho === void 0) {
    validarTamanho = false;
  }
  if (!validarTamanho && tamanhoNaoE(valor)) {
    return false;
  }
  if (eIndefinido(base)) {
    base = primeiros(valor);
  }
  if (!base) {
    base = primeiros(valor);
  }
  var digito = substracaoPor11SeMaiorQue2CasoContrario0(mod(base));
  return base + digito;
}

function tamanhoNaoE(string, tamanho) {
  if (tamanho === void 0) {
    tamanho = 9;
  }
  if (eIndefinido(tamanho)) {
    tamanho = 9;
  }
  return string.length !== tamanho;
}

function eIndefinido(objeto) {
  return typeof objeto === typeof undefined;
}

function naoComecaCom(string, valor) {
  return string.substring(0, valor.length) !== valor;
}

function primeiros(string, quantidade) {
  if (quantidade === void 0) {
    quantidade = 8;
  }
  if (eIndefinido(quantidade)) {
    quantidade = 8;
  }
  return string.substring(0, quantidade);
}

function serie(de, ate) {
  var resultado = [];
  while (de <= ate) {
    resultado.push(de++);
  }
  return resultado;
}

function substracaoPor11SeMaiorQue2CasoContrario0(valor) {
  return valor < 2 ? 0 : 11 - valor;
}

function gerarPessoa(options) {
  if (options === void 0) {
    options = {};
  }
  if (!options.estado) {
    options.estado = randomEstadoSigla();
  }
  var cpf = gerarCpf();
  var rg = gerarRg(options);
  var telefone = gerarTelefone(options);
  var celular = gerarCelular(options);
  var dataNascimento = gerarData({
    idadeMin: 18,
    idadeMax: 40,
  });
  var site = gerarSite();
  var email = gerarEmail();
  var endereco = gerarEndereco(options);
  var altura = "1." + randomNumber(35, 90);
  var peso = randomNumber(50, 120);
  var signo = getAstro(dataNascimento);
  var tipoSanguineo = randArray(TIPOS_SANGUINEOS);
  var sobrenomePai = randArray(SOBRENOMES);
  var sobrenomeMae = randArray(SOBRENOMES);
  var nome =
    randArray(NOMES_MASCULINOS) + " " + sobrenomeMae + " " + sobrenomePai;
  var mae =
    randArray(NOMES_FEMININOS) + " " + sobrenomeMae + " " + sobrenomePai;
  var pai =
    randArray(NOMES_MASCULINOS) +
    " " +
    randArray(SOBRENOMES) +
    " " +
    sobrenomePai;
  var usuario = gerarUsuario(nome);

  var data_cadastro = gerarData({
    idadeMin: 0,
    idadeMax: 3,
  });
  var data_alteracao = gerarData({
    idadeMin: 0,
    idadeMax: 3,
  });

  endereco.data_cadastro = data_cadastro;
  endereco.data_alteracao = data_alteracao;

  return {
    data_cadastro,
    data_alteracao,
    nome: nome,
    //    mae: mae,
    //    pai: pai,
    //    site: site,
    //    rg: rg,
    email: email,
    codigo_nacional: cpf,
    telefone: telefone,
    celular: celular,
    data_nascimento: dataNascimento,
    endereco: endereco,
    ativo: true,
    //    usuario: usuario,
    //    signo: signo,
    //    tipoSanguineo: tipoSanguineo,
    //    altura: altura,
    //    peso: peso
  };
}

function gerarInscricaoestadual(estado) {
  estado = estado.toLowerCase();
  var val = makeGenericFaker(MASKS["inscricaoestadual"][estado])();
  val = val.match(/\d/g).join("");
  var newval = generateInscricaoEstadual[estado](val);
  return newval;
}

var generateInscricaoEstadual = {
  ac: function (valor) {
    if (tamanhoNaoE(valor, 13)) {
      return false;
    }
    if (naoComecaCom(valor, "01")) {
      return false;
    }
    var base = primeiros(valor, 11);
    var primeiroDigito = substracaoPor11SeMaiorQue2CasoContrario0(mod(base));
    var segundoDigito = substracaoPor11SeMaiorQue2CasoContrario0(
      mod(base + primeiroDigito)
    );
    return base + primeiroDigito + segundoDigito;
  },
  am: function (valor) {
    if (tamanhoNaoE(valor)) {
      return false;
    }
    return calculoTrivialGenerate(valor);
  },
  al: function (valor) {
    if (tamanhoNaoE(valor)) {
      return false;
    }
    if (naoComecaCom(valor, "24")) {
      return false;
    }
    //
    // Removi a validação do tipo da empresa abaixo
    // devido a ambiguidade entre a especificação do
    // Sintegra (http://www.sintegra.gov.br/Cad_Estados/cad_AL.html) e do
    // site do da Sefaz do Alagoas (http://www.sefaz.al.gov.br/sintegra/cad_AL.asp).
    // Veja o issue #4 - https://github.com/gammasoft/ie/issues/4
    //
    // if('03578'.split('').indexOf(valor.substring(2, 3)) === -1) {
    //     return false;
    // }
    var base = primeiros(valor);
    var resto = mod(base) * 10;
    var resT = resto / 11;
    resto = resto - resT * 11;
    var digito = resto === 10 ? 0 : resto;
    return base + digito;
  },
  ap: function (valor) {
    if (tamanhoNaoE(valor)) {
      return false;
    }
    if (naoComecaCom(valor, "03")) {
      return false;
    }
    var base = primeiros(valor);
    var p, d;
    if (entre(base, 3000001, 3017000)) {
      p = 5;
      d = 0;
    } else if (entre(base, 3017001, 3019022)) {
      p = 9;
      d = 1;
    } else {
      p = 0;
      d = 0;
    }
    var resto = mod(p + base, [2, 3, 4, 5, 6, 7, 8, 9, 1]);
    var digito;
    if (resto === 1) {
      digito = 0;
    } else if (resto === 0) {
      digito = d;
    } else {
      digito = 11 - resto;
    }
    return base + digito;
  },
  ba: function (valor) {
    if (tamanhoNaoE(valor, 8) && tamanhoNaoE(valor)) {
      return false;
    }
    var base = primeiros(valor, valor.length - 2);
    var primeiroDigito, segundoDigito;
    var segundoMultiplicador = serie(2, 7);
    var primeiroMultiplicador = serie(2, 8);
    var primeiroResto, segundoResto;
    var digitoComparacao = valor.substring(0, 1);
    if (tamanhoE(valor, 9)) {
      segundoMultiplicador.push(8);
      primeiroMultiplicador.push(9);
      digitoComparacao = valor.substring(1, 2);
    }
    if ("0123458".split("").indexOf(digitoComparacao) !== -1) {
      segundoResto = mod(base, segundoMultiplicador, 10);
      segundoDigito = segundoResto === 0 ? 0 : 10 - segundoResto;
      primeiroResto = mod(base + segundoDigito, primeiroMultiplicador, 10);
      primeiroDigito = primeiroResto === 0 ? 0 : 10 - primeiroResto;
    } else {
      segundoResto = mod(base, segundoMultiplicador);
      segundoDigito = substracaoPor11SeMaiorQue2CasoContrario0(segundoResto);
      primeiroResto = mod(base + segundoDigito, primeiroMultiplicador);
      primeiroDigito = substracaoPor11SeMaiorQue2CasoContrario0(primeiroResto);
    }
    return base + primeiroDigito + segundoDigito;
  },
  ce: function (valor) {
    if (tamanhoNaoE(valor)) {
      return false;
    }
    return calculoTrivialGenerate(valor);
  },
  df: function (valor) {
    if (tamanhoNaoE(valor, 13)) {
      return false;
    }
    if (naoComecaCom(valor, "07")) {
      return false;
    }
    var base = primeiros(valor, 11);
    var primeiro = substracaoPor11SeMaiorQue2CasoContrario0(mod(base));
    var segundo = substracaoPor11SeMaiorQue2CasoContrario0(
      mod(base + primeiro)
    );
    return base + primeiro + segundo;
  },
  es: function (valor) {
    return calculoTrivialGenerate(valor);
  },
  go: function (valor) {
    if (tamanhoNaoE(valor)) {
      return false;
    }
    if (["10", "11", "15"].indexOf(valor.substring(0, 2)) === -1) {
      return false;
    }
    var base = primeiros(valor);
    if (base === "11094402") {
      return valor.substr(8) === "1" || valor.substr(8) === "0";
    }
    var resto = mod(base);
    var digito;
    if (resto === 0) {
      digito = 0;
    } else if (resto === 1) {
      if (entre(base, 10103105, 10119997)) {
        digito = 1;
      } else {
        digito = 0;
      }
    } else {
      digito = 11 - resto;
    }
    return base + digito;
  },
  ma: function (valor) {
    if (tamanhoNaoE(valor)) {
      return false;
    }
    if (naoComecaCom(valor, "12")) {
      return false;
    }
    return calculoTrivialGenerate(valor);
  },
  mg: function (valor) {
    if (tamanhoNaoE(valor, 13)) {
      return false;
    }
    var base = primeiros(valor, 11);
    var baseComZero = valor.substring(0, 3) + "0" + valor.substring(3, 11);
    var i = 0;
    var produtorioLiteral = baseComZero
      .split("")
      .reduceRight(function (anterior, atual) {
        if (i > [2, 1].length - 1) {
          i = 0;
        }
        return (
          ([2, 1][i++] * parseInt(atual, 10)).toString() + anterior.toString()
        );
      }, "")
      .split("")
      .reduce(function (anterior, atual) {
        return anterior + parseInt(atual, 10);
      }, 0);
    var primeiro =
      (Math.floor(produtorioLiteral / 10) + 1) * 10 - produtorioLiteral;
    if (primeiro === 10) {
      primeiro = 0;
    }
    var segundo = substracaoPor11SeMaiorQue2CasoContrario0(
      mod(base + primeiro, serie(2, 11))
    );
    return base + primeiro + segundo;
  },
  ms: function (valor) {
    if (naoComecaCom(valor, "28")) {
      return false;
    }
    return calculoTrivialGenerate(valor);
  },
  mt: function (valor) {
    if (tamanhoNaoE(valor, 11) && tamanhoNaoE(valor)) {
      return false;
    }
    var base = tamanhoE(valor, 11) ? valor.substring(0, 10) : primeiros(valor);
    return calculoTrivialGenerate(valor, base, true);
  },
  pa: function (valor) {
    if (tamanhoNaoE(valor)) {
      return false;
    }
    if (naoComecaCom(valor, "15")) {
      return false;
    }
    return calculoTrivialGenerate(valor);
  },
  pb: function (valor) {
    if (tamanhoNaoE(valor)) {
      return false;
    }
    return calculoTrivialGenerate(valor);
  },
  pe: function (valor) {
    var base = valor.substring(0, valor.length - 2);
    var restoPrimeiro = mod(base);
    var primeiro = 11 - restoPrimeiro >= 10 ? 0 : 11 - restoPrimeiro;
    var restoSegundo = mod(base + primeiro);
    var segundo = 11 - restoSegundo >= 10 ? 0 : 11 - restoSegundo;
    return base + primeiro + segundo;
  },
  pi: function (valor) {
    return calculoTrivialGenerate(valor);
  },
  pr: function (valor) {
    if (tamanhoNaoE(valor, 10)) {
      return false;
    }
    var base = primeiros(valor);
    var restoPrimeiro = mod(base, serie(2, 7));
    var primeiro = 11 - restoPrimeiro >= 10 ? 0 : 11 - restoPrimeiro;
    var restoSegundo = mod(base + primeiro, serie(2, 7));
    var segundo = 11 - restoSegundo >= 10 ? 0 : 11 - restoSegundo;
    return base + primeiro + segundo;
  },
  rj: function (valor) {
    if (tamanhoNaoE(valor, 8)) {
      return false;
    }
    var base = primeiros(valor, 7);
    var digito = substracaoPor11SeMaiorQue2CasoContrario0(
      mod(base, serie(2, 7))
    );
    return base + digito;
  },
  rn: function (valor) {
    if (tamanhoNaoE(valor) && tamanhoNaoE(valor, 10)) {
      return false;
    }
    if (naoComecaCom(valor, "20")) {
      return false;
    }
    var base = valor.substring(0, valor.length - 1);
    var multiplicadores = serie(2, 9);
    if (tamanhoE(valor, 10)) {
      multiplicadores.push(10);
    }
    var resto = (mod(base, multiplicadores) * 10) % 11;
    var digito = resto === 10 ? 0 : resto;
    return base + digito;
  },
  ro: function (valor) {
    var base, digito, resultadoMod;
    if (tamanhoE(valor, 9)) {
      base = valor.substring(3, 8);
      digito = substracaoPor11SeMaiorQue2CasoContrario0(mod(base));
      return valor === valor.substring(0, 3) + base + digito;
    } else if (tamanhoE(valor, 14)) {
      base = primeiros(valor, 13);
      resultadoMod = mod(base);
      digito = resultadoMod <= 1 ? 1 : 11 - resultadoMod;
      return base + digito;
    } else {
      return false;
    }
  },
  rr: function (valor) {
    if (tamanhoNaoE(valor)) {
      return false;
    }
    if (naoComecaCom(valor, "24")) {
      return false;
    }
    var base = primeiros(valor);
    var digito = mod(base, [8, 7, 6, 5, 4, 3, 2, 1], 9);
    return base + digito;
  },
  rs: function (valor) {
    if (tamanhoNaoE(valor, 10)) {
      return false;
    }
    var base = primeiros(valor, 9);
    return calculoTrivialGenerate(valor, base, true);
  },
  sc: function (valor) {
    return calculoTrivialGenerate(valor);
  },
  se: function (valor) {
    if (tamanhoNaoE(valor)) {
      return false;
    }
    return calculoTrivialGenerate(valor);
  },
  sp: function (valor) {
    valor = valor.toUpperCase();
    var segundaBase;
    if (valor.substr(0, 1) === "P") {
      if (tamanhoNaoE(valor, 13)) {
        return false;
      }
      var base = valor.substring(1, 9);
      segundaBase = valor.substring(10, 13);
      var resto = mod(base, [10, 8, 7, 6, 5, 4, 3, 1]).toString();
      var digito = resto.length > 1 ? resto[1] : resto[0];
      return "P" + base + digito + segundaBase;
    } else {
      if (tamanhoNaoE(valor, 12)) {
        return false;
      }
      var primeiraBase = primeiros(valor);
      segundaBase = valor.substring(9, 11);
      var primeiroResto = mod(
        primeiraBase,
        [10, 8, 7, 6, 5, 4, 3, 1]
      ).toString();
      var primeiro =
        primeiroResto.length > 1 ? primeiroResto[1] : primeiroResto[0];
      var segundoResto = mod(
        primeiraBase + primeiro + segundaBase,
        serie(2, 10)
      ).toString();
      var segundo = segundoResto.length > 1 ? segundoResto[1] : segundoResto[0];
      return primeiraBase + primeiro + segundaBase + segundo;
    }
  },
  to: function (valor) {
    if (tamanhoNaoE(valor) && tamanhoNaoE(valor, 11)) {
      return false;
    }
    var base;
    if (tamanhoE(valor, 11)) {
      if (["01", "02", "03", "99"].indexOf(valor.substring(2, 4)) === -1) {
        return false;
      }
      base = valor.substring(0, 2) + valor.substring(4, 10);
    } else {
      base = primeiros(valor);
    }
    var digito = substracaoPor11SeMaiorQue2CasoContrario0(mod(base));
    return valor.substring(0, valor.length - 1) + digito;
  },
};

function mod(valor, multiplicadores, divisor) {
  if (multiplicadores === void 0) {
    multiplicadores = serie(2, 9);
  }
  if (divisor === void 0) {
    divisor = 11;
  }
  if (eIndefinido(divisor)) {
    divisor = 11;
  }
  if (eIndefinido(multiplicadores)) {
    multiplicadores = serie(2, 9);
  }
  var i = 0;
  return (
    valor.split("").reduceRight(function (anterior, atual) {
      if (i > multiplicadores.length - 1) {
        i = 0;
      }
      return multiplicadores[i++] * parseInt(atual, 10) + anterior;
    }, 0) % divisor
  );
}

function gerarRg(options) {
  if (options === void 0) {
    options = {};
  }
  if (!options.estado) {
    options.estado = randomEstadoSigla();
  }
  var estado = options.estado.split("");
  var makeRg = makeGenericFaker(MASKS["rg"], {
    0: function () {
      return estado[0];
    },
    1: function () {
      return estado[1];
    },
  });
  return makeRg();
}

function tamanhoE(string, tamanho) {
  return !tamanhoNaoE(string, tamanho);
}

function gerarSenha(options) {
  if (options === void 0) {
    options = {};
  }
  if (!options.size) {
    options.size = 8;
  }
  var pass = [
    randomLetter().toLowerCase(),
    randomLetter().toUpperCase(),
    randomNumber(0, 9),
    randArray(["!", "@", "#", "$", "%", "^", "&", "*"]),
  ];
  var i = 4;
  for (i = 4; i <= options.size; i++) {
    var newchar = randArray([
      randomLetter().toLowerCase(),
      randomLetter().toUpperCase(),
      randomNumber(0, 9),
      randArray(["!", "@", "#", "$", "%", "^", "&", "*"]),
    ]);
    pass.push(newchar);
  }
  return pass.join("");
}

function slugify(value) {
  return value
    .toString()
    .toLowerCase()
    .replace(/[àÀáÁâÂãäÄÅåª]+/g, "a") // Special Characters #1
    .replace(/[èÈéÉêÊëË]+/g, "e") // Special Characters #2
    .replace(/[ìÌíÍîÎïÏ]+/g, "i") // Special Characters #3
    .replace(/[òÒóÓôÔõÕöÖº]+/g, "o") // Special Characters #4
    .replace(/[ùÙúÚûÛüÜ]+/g, "u") // Special Characters #5
    .replace(/[ýÝÿŸ]+/g, "y") // Special Characters #6
    .replace(/[ñÑ]+/g, "n") // Special Characters #7
    .replace(/[çÇ]+/g, "c") // Special Characters #8
    .replace(/[ß]+/g, "ss") // Special Characters #9
    .replace(/[Ææ]+/g, "ae") // Special Characters #10
    .replace(/[Øøœ]+/g, "oe") // Special Characters #11
    .replace(/[%]+/g, "pct") // Special Characters #12
    .replace(/\s+/g, "-") // Replace spaces with -
    .replace(/[^\w\-]+/g, "") // Remove all non-word chars
    .replace(/\-\-+/g, "-") // Replace multiple - with single -
    .replace(/^-+/, "") // Trim - from start of text
    .replace(/-+$/, ""); // Trim - from end of text
}

function gerarSite(options) {
  if (options === void 0) {
    options = {};
  }
  var nome = randArray(EMPRESAS_TIPOS) + " " + randArray(EMPRESAS_NOMES);
  var dominio = ".com.br";
  var url = randArray(["http://", "https://"]);
  if (options.nome) {
    nome = options.nome;
  }
  if (options.dominio) {
    dominio = options.dominio;
  }
  if (options.url !== undefined) {
    url = options.url;
  }
  nome = slugify(nome);
  return url + nome + dominio;
}

function gerarUsuario(nome) {
  if (!nome) {
    var sobrenomePai = randArray(SOBRENOMES);
    nome = randArray(NOMES_MASCULINOS) + " " + sobrenomePai;
  }
  return slugify(nome);
}

function gerarEmpresa(options) {
  if (options === void 0) {
    options = {};
  }
  var cnpj = gerarCnpj();
  if (!options.estado) {
    options.estado = randomEstadoSigla();
  }
  var endereco = gerarEndereco(options);
  var telefone = gerarTelefone({
    estado: endereco.uf,
  });
  var celular = gerarCelular({
    estado: endereco.uf,
  });
  //var inscricaoestadual = gerarInscricaoestadual(endereco.uf);
  var dataAbertura = gerarData({
    idadeMin: 4,
    idadeMax: 20,
  });
  var fundador1 = gerarPessoa(options);
  var fundador2 = gerarPessoa(options);
  var fundadores = [fundador1, fundador2];
  var nome = randArray(EMPRESAS_TIPOS) + " " + randArray(EMPRESAS_NOMES);
  // const site = faker.site();
  var email = gerarEmail({
    nome: "contato",
    empresa: nome,
  });

  var data_cadastro = gerarData({
    idadeMin: 0,
    idadeMax: 3,
  });
  var data_alteracao = gerarData({
    idadeMin: 0,
    idadeMax: 3,
  });

  endereco.data_cadastro = data_cadastro;
  endereco.data_alteracao = data_alteracao;

  return {
    data_cadastro,
    data_alteracao,
    nome: nome + " Ltda.",
    nome_fantasia: nome,
    nomeFantasia: nome,
    email: email,
    //inscricaoEstadual: inscricaoestadual,
    //fundadores: fundadores,
    codigo_nacional: cnpj,
    codigoNacional: cnpj,
    telefone: telefone,
    celular: celular,
    endereco: endereco,
    data_nascimento: dataAbertura,
    dataNascimento: dataAbertura,
    ativo: true,
  };
}

function pad(num, size) {
  var s = "00000000000000000000" + num;
  return s.substr(s.length - size);
}

function entre(valor, limiteInferior, limiteSuperior) {
  if (typeof valor === "string") {
    valor = parseInt(valor, 10);
  }
  return valor >= limiteInferior && valor <= limiteSuperior;
}
